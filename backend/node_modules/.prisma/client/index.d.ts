
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model alumni_details
 * 
 */
export type alumni_details = $Result.DefaultSelection<Prisma.$alumni_detailsPayload>
/**
 * Model alumni_interaction_program
 * 
 */
export type alumni_interaction_program = $Result.DefaultSelection<Prisma.$alumni_interaction_programPayload>
/**
 * Model staff_details
 * 
 */
export type staff_details = $Result.DefaultSelection<Prisma.$staff_detailsPayload>
/**
 * Model student_details
 * 
 */
export type student_details = $Result.DefaultSelection<Prisma.$student_detailsPayload>
/**
 * Model student_staff_interaction
 * 
 */
export type student_staff_interaction = $Result.DefaultSelection<Prisma.$student_staff_interactionPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Alumni_details
 * const alumni_details = await prisma.alumni_details.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Alumni_details
   * const alumni_details = await prisma.alumni_details.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.alumni_details`: Exposes CRUD operations for the **alumni_details** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Alumni_details
    * const alumni_details = await prisma.alumni_details.findMany()
    * ```
    */
  get alumni_details(): Prisma.alumni_detailsDelegate<ExtArgs>;

  /**
   * `prisma.alumni_interaction_program`: Exposes CRUD operations for the **alumni_interaction_program** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Alumni_interaction_programs
    * const alumni_interaction_programs = await prisma.alumni_interaction_program.findMany()
    * ```
    */
  get alumni_interaction_program(): Prisma.alumni_interaction_programDelegate<ExtArgs>;

  /**
   * `prisma.staff_details`: Exposes CRUD operations for the **staff_details** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Staff_details
    * const staff_details = await prisma.staff_details.findMany()
    * ```
    */
  get staff_details(): Prisma.staff_detailsDelegate<ExtArgs>;

  /**
   * `prisma.student_details`: Exposes CRUD operations for the **student_details** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Student_details
    * const student_details = await prisma.student_details.findMany()
    * ```
    */
  get student_details(): Prisma.student_detailsDelegate<ExtArgs>;

  /**
   * `prisma.student_staff_interaction`: Exposes CRUD operations for the **student_staff_interaction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Student_staff_interactions
    * const student_staff_interactions = await prisma.student_staff_interaction.findMany()
    * ```
    */
  get student_staff_interaction(): Prisma.student_staff_interactionDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.14.0
   * Query Engine version: e9771e62de70f79a5e1c604a2d7c8e2a0a874b48
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    alumni_details: 'alumni_details',
    alumni_interaction_program: 'alumni_interaction_program',
    staff_details: 'staff_details',
    student_details: 'student_details',
    student_staff_interaction: 'student_staff_interaction'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'alumni_details' | 'alumni_interaction_program' | 'staff_details' | 'student_details' | 'student_staff_interaction'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      alumni_details: {
        payload: Prisma.$alumni_detailsPayload<ExtArgs>
        fields: Prisma.alumni_detailsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.alumni_detailsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alumni_detailsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.alumni_detailsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alumni_detailsPayload>
          }
          findFirst: {
            args: Prisma.alumni_detailsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alumni_detailsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.alumni_detailsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alumni_detailsPayload>
          }
          findMany: {
            args: Prisma.alumni_detailsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alumni_detailsPayload>[]
          }
          create: {
            args: Prisma.alumni_detailsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alumni_detailsPayload>
          }
          createMany: {
            args: Prisma.alumni_detailsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.alumni_detailsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alumni_detailsPayload>
          }
          update: {
            args: Prisma.alumni_detailsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alumni_detailsPayload>
          }
          deleteMany: {
            args: Prisma.alumni_detailsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.alumni_detailsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.alumni_detailsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alumni_detailsPayload>
          }
          aggregate: {
            args: Prisma.Alumni_detailsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAlumni_details>
          }
          groupBy: {
            args: Prisma.alumni_detailsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Alumni_detailsGroupByOutputType>[]
          }
          count: {
            args: Prisma.alumni_detailsCountArgs<ExtArgs>,
            result: $Utils.Optional<Alumni_detailsCountAggregateOutputType> | number
          }
        }
      }
      alumni_interaction_program: {
        payload: Prisma.$alumni_interaction_programPayload<ExtArgs>
        fields: Prisma.alumni_interaction_programFieldRefs
        operations: {
          findUnique: {
            args: Prisma.alumni_interaction_programFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alumni_interaction_programPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.alumni_interaction_programFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alumni_interaction_programPayload>
          }
          findFirst: {
            args: Prisma.alumni_interaction_programFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alumni_interaction_programPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.alumni_interaction_programFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alumni_interaction_programPayload>
          }
          findMany: {
            args: Prisma.alumni_interaction_programFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alumni_interaction_programPayload>[]
          }
          create: {
            args: Prisma.alumni_interaction_programCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alumni_interaction_programPayload>
          }
          createMany: {
            args: Prisma.alumni_interaction_programCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.alumni_interaction_programDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alumni_interaction_programPayload>
          }
          update: {
            args: Prisma.alumni_interaction_programUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alumni_interaction_programPayload>
          }
          deleteMany: {
            args: Prisma.alumni_interaction_programDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.alumni_interaction_programUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.alumni_interaction_programUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$alumni_interaction_programPayload>
          }
          aggregate: {
            args: Prisma.Alumni_interaction_programAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAlumni_interaction_program>
          }
          groupBy: {
            args: Prisma.alumni_interaction_programGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Alumni_interaction_programGroupByOutputType>[]
          }
          count: {
            args: Prisma.alumni_interaction_programCountArgs<ExtArgs>,
            result: $Utils.Optional<Alumni_interaction_programCountAggregateOutputType> | number
          }
        }
      }
      staff_details: {
        payload: Prisma.$staff_detailsPayload<ExtArgs>
        fields: Prisma.staff_detailsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.staff_detailsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$staff_detailsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.staff_detailsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$staff_detailsPayload>
          }
          findFirst: {
            args: Prisma.staff_detailsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$staff_detailsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.staff_detailsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$staff_detailsPayload>
          }
          findMany: {
            args: Prisma.staff_detailsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$staff_detailsPayload>[]
          }
          create: {
            args: Prisma.staff_detailsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$staff_detailsPayload>
          }
          createMany: {
            args: Prisma.staff_detailsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.staff_detailsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$staff_detailsPayload>
          }
          update: {
            args: Prisma.staff_detailsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$staff_detailsPayload>
          }
          deleteMany: {
            args: Prisma.staff_detailsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.staff_detailsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.staff_detailsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$staff_detailsPayload>
          }
          aggregate: {
            args: Prisma.Staff_detailsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateStaff_details>
          }
          groupBy: {
            args: Prisma.staff_detailsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Staff_detailsGroupByOutputType>[]
          }
          count: {
            args: Prisma.staff_detailsCountArgs<ExtArgs>,
            result: $Utils.Optional<Staff_detailsCountAggregateOutputType> | number
          }
        }
      }
      student_details: {
        payload: Prisma.$student_detailsPayload<ExtArgs>
        fields: Prisma.student_detailsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.student_detailsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$student_detailsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.student_detailsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$student_detailsPayload>
          }
          findFirst: {
            args: Prisma.student_detailsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$student_detailsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.student_detailsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$student_detailsPayload>
          }
          findMany: {
            args: Prisma.student_detailsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$student_detailsPayload>[]
          }
          create: {
            args: Prisma.student_detailsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$student_detailsPayload>
          }
          createMany: {
            args: Prisma.student_detailsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.student_detailsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$student_detailsPayload>
          }
          update: {
            args: Prisma.student_detailsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$student_detailsPayload>
          }
          deleteMany: {
            args: Prisma.student_detailsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.student_detailsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.student_detailsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$student_detailsPayload>
          }
          aggregate: {
            args: Prisma.Student_detailsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateStudent_details>
          }
          groupBy: {
            args: Prisma.student_detailsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Student_detailsGroupByOutputType>[]
          }
          count: {
            args: Prisma.student_detailsCountArgs<ExtArgs>,
            result: $Utils.Optional<Student_detailsCountAggregateOutputType> | number
          }
        }
      }
      student_staff_interaction: {
        payload: Prisma.$student_staff_interactionPayload<ExtArgs>
        fields: Prisma.student_staff_interactionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.student_staff_interactionFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$student_staff_interactionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.student_staff_interactionFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$student_staff_interactionPayload>
          }
          findFirst: {
            args: Prisma.student_staff_interactionFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$student_staff_interactionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.student_staff_interactionFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$student_staff_interactionPayload>
          }
          findMany: {
            args: Prisma.student_staff_interactionFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$student_staff_interactionPayload>[]
          }
          create: {
            args: Prisma.student_staff_interactionCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$student_staff_interactionPayload>
          }
          createMany: {
            args: Prisma.student_staff_interactionCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.student_staff_interactionDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$student_staff_interactionPayload>
          }
          update: {
            args: Prisma.student_staff_interactionUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$student_staff_interactionPayload>
          }
          deleteMany: {
            args: Prisma.student_staff_interactionDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.student_staff_interactionUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.student_staff_interactionUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$student_staff_interactionPayload>
          }
          aggregate: {
            args: Prisma.Student_staff_interactionAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateStudent_staff_interaction>
          }
          groupBy: {
            args: Prisma.student_staff_interactionGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Student_staff_interactionGroupByOutputType>[]
          }
          count: {
            args: Prisma.student_staff_interactionCountArgs<ExtArgs>,
            result: $Utils.Optional<Student_staff_interactionCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */



  /**
   * Models
   */

  /**
   * Model alumni_details
   */

  export type AggregateAlumni_details = {
    _count: Alumni_detailsCountAggregateOutputType | null
    _avg: Alumni_detailsAvgAggregateOutputType | null
    _sum: Alumni_detailsSumAggregateOutputType | null
    _min: Alumni_detailsMinAggregateOutputType | null
    _max: Alumni_detailsMaxAggregateOutputType | null
  }

  export type Alumni_detailsAvgAggregateOutputType = {
    uid: number | null
  }

  export type Alumni_detailsSumAggregateOutputType = {
    uid: number | null
  }

  export type Alumni_detailsMinAggregateOutputType = {
    uid: number | null
    name: string | null
    regno: string | null
    department: string | null
    phone: string | null
    email: string | null
    image: string | null
    domain: string | null
    company: string | null
    city: string | null
    pass_year: string | null
  }

  export type Alumni_detailsMaxAggregateOutputType = {
    uid: number | null
    name: string | null
    regno: string | null
    department: string | null
    phone: string | null
    email: string | null
    image: string | null
    domain: string | null
    company: string | null
    city: string | null
    pass_year: string | null
  }

  export type Alumni_detailsCountAggregateOutputType = {
    uid: number
    name: number
    regno: number
    department: number
    phone: number
    email: number
    image: number
    domain: number
    company: number
    city: number
    pass_year: number
    _all: number
  }


  export type Alumni_detailsAvgAggregateInputType = {
    uid?: true
  }

  export type Alumni_detailsSumAggregateInputType = {
    uid?: true
  }

  export type Alumni_detailsMinAggregateInputType = {
    uid?: true
    name?: true
    regno?: true
    department?: true
    phone?: true
    email?: true
    image?: true
    domain?: true
    company?: true
    city?: true
    pass_year?: true
  }

  export type Alumni_detailsMaxAggregateInputType = {
    uid?: true
    name?: true
    regno?: true
    department?: true
    phone?: true
    email?: true
    image?: true
    domain?: true
    company?: true
    city?: true
    pass_year?: true
  }

  export type Alumni_detailsCountAggregateInputType = {
    uid?: true
    name?: true
    regno?: true
    department?: true
    phone?: true
    email?: true
    image?: true
    domain?: true
    company?: true
    city?: true
    pass_year?: true
    _all?: true
  }

  export type Alumni_detailsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which alumni_details to aggregate.
     */
    where?: alumni_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alumni_details to fetch.
     */
    orderBy?: alumni_detailsOrderByWithRelationInput | alumni_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: alumni_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alumni_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alumni_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned alumni_details
    **/
    _count?: true | Alumni_detailsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Alumni_detailsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Alumni_detailsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Alumni_detailsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Alumni_detailsMaxAggregateInputType
  }

  export type GetAlumni_detailsAggregateType<T extends Alumni_detailsAggregateArgs> = {
        [P in keyof T & keyof AggregateAlumni_details]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAlumni_details[P]>
      : GetScalarType<T[P], AggregateAlumni_details[P]>
  }




  export type alumni_detailsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: alumni_detailsWhereInput
    orderBy?: alumni_detailsOrderByWithAggregationInput | alumni_detailsOrderByWithAggregationInput[]
    by: Alumni_detailsScalarFieldEnum[] | Alumni_detailsScalarFieldEnum
    having?: alumni_detailsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Alumni_detailsCountAggregateInputType | true
    _avg?: Alumni_detailsAvgAggregateInputType
    _sum?: Alumni_detailsSumAggregateInputType
    _min?: Alumni_detailsMinAggregateInputType
    _max?: Alumni_detailsMaxAggregateInputType
  }

  export type Alumni_detailsGroupByOutputType = {
    uid: number
    name: string
    regno: string
    department: string
    phone: string
    email: string
    image: string
    domain: string
    company: string
    city: string
    pass_year: string
    _count: Alumni_detailsCountAggregateOutputType | null
    _avg: Alumni_detailsAvgAggregateOutputType | null
    _sum: Alumni_detailsSumAggregateOutputType | null
    _min: Alumni_detailsMinAggregateOutputType | null
    _max: Alumni_detailsMaxAggregateOutputType | null
  }

  type GetAlumni_detailsGroupByPayload<T extends alumni_detailsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Alumni_detailsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Alumni_detailsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Alumni_detailsGroupByOutputType[P]>
            : GetScalarType<T[P], Alumni_detailsGroupByOutputType[P]>
        }
      >
    >


  export type alumni_detailsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uid?: boolean
    name?: boolean
    regno?: boolean
    department?: boolean
    phone?: boolean
    email?: boolean
    image?: boolean
    domain?: boolean
    company?: boolean
    city?: boolean
    pass_year?: boolean
  }, ExtArgs["result"]["alumni_details"]>

  export type alumni_detailsSelectScalar = {
    uid?: boolean
    name?: boolean
    regno?: boolean
    department?: boolean
    phone?: boolean
    email?: boolean
    image?: boolean
    domain?: boolean
    company?: boolean
    city?: boolean
    pass_year?: boolean
  }



  export type $alumni_detailsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "alumni_details"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      uid: number
      name: string
      regno: string
      department: string
      phone: string
      email: string
      image: string
      domain: string
      company: string
      city: string
      pass_year: string
    }, ExtArgs["result"]["alumni_details"]>
    composites: {}
  }


  type alumni_detailsGetPayload<S extends boolean | null | undefined | alumni_detailsDefaultArgs> = $Result.GetResult<Prisma.$alumni_detailsPayload, S>

  type alumni_detailsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<alumni_detailsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Alumni_detailsCountAggregateInputType | true
    }

  export interface alumni_detailsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['alumni_details'], meta: { name: 'alumni_details' } }
    /**
     * Find zero or one Alumni_details that matches the filter.
     * @param {alumni_detailsFindUniqueArgs} args - Arguments to find a Alumni_details
     * @example
     * // Get one Alumni_details
     * const alumni_details = await prisma.alumni_details.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends alumni_detailsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, alumni_detailsFindUniqueArgs<ExtArgs>>
    ): Prisma__alumni_detailsClient<$Result.GetResult<Prisma.$alumni_detailsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Alumni_details that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {alumni_detailsFindUniqueOrThrowArgs} args - Arguments to find a Alumni_details
     * @example
     * // Get one Alumni_details
     * const alumni_details = await prisma.alumni_details.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends alumni_detailsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, alumni_detailsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__alumni_detailsClient<$Result.GetResult<Prisma.$alumni_detailsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Alumni_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alumni_detailsFindFirstArgs} args - Arguments to find a Alumni_details
     * @example
     * // Get one Alumni_details
     * const alumni_details = await prisma.alumni_details.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends alumni_detailsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, alumni_detailsFindFirstArgs<ExtArgs>>
    ): Prisma__alumni_detailsClient<$Result.GetResult<Prisma.$alumni_detailsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Alumni_details that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alumni_detailsFindFirstOrThrowArgs} args - Arguments to find a Alumni_details
     * @example
     * // Get one Alumni_details
     * const alumni_details = await prisma.alumni_details.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends alumni_detailsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, alumni_detailsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__alumni_detailsClient<$Result.GetResult<Prisma.$alumni_detailsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Alumni_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alumni_detailsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Alumni_details
     * const alumni_details = await prisma.alumni_details.findMany()
     * 
     * // Get first 10 Alumni_details
     * const alumni_details = await prisma.alumni_details.findMany({ take: 10 })
     * 
     * // Only select the `uid`
     * const alumni_detailsWithUidOnly = await prisma.alumni_details.findMany({ select: { uid: true } })
     * 
    **/
    findMany<T extends alumni_detailsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, alumni_detailsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alumni_detailsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Alumni_details.
     * @param {alumni_detailsCreateArgs} args - Arguments to create a Alumni_details.
     * @example
     * // Create one Alumni_details
     * const Alumni_details = await prisma.alumni_details.create({
     *   data: {
     *     // ... data to create a Alumni_details
     *   }
     * })
     * 
    **/
    create<T extends alumni_detailsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, alumni_detailsCreateArgs<ExtArgs>>
    ): Prisma__alumni_detailsClient<$Result.GetResult<Prisma.$alumni_detailsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Alumni_details.
     * @param {alumni_detailsCreateManyArgs} args - Arguments to create many Alumni_details.
     * @example
     * // Create many Alumni_details
     * const alumni_details = await prisma.alumni_details.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends alumni_detailsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, alumni_detailsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Alumni_details.
     * @param {alumni_detailsDeleteArgs} args - Arguments to delete one Alumni_details.
     * @example
     * // Delete one Alumni_details
     * const Alumni_details = await prisma.alumni_details.delete({
     *   where: {
     *     // ... filter to delete one Alumni_details
     *   }
     * })
     * 
    **/
    delete<T extends alumni_detailsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, alumni_detailsDeleteArgs<ExtArgs>>
    ): Prisma__alumni_detailsClient<$Result.GetResult<Prisma.$alumni_detailsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Alumni_details.
     * @param {alumni_detailsUpdateArgs} args - Arguments to update one Alumni_details.
     * @example
     * // Update one Alumni_details
     * const alumni_details = await prisma.alumni_details.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends alumni_detailsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, alumni_detailsUpdateArgs<ExtArgs>>
    ): Prisma__alumni_detailsClient<$Result.GetResult<Prisma.$alumni_detailsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Alumni_details.
     * @param {alumni_detailsDeleteManyArgs} args - Arguments to filter Alumni_details to delete.
     * @example
     * // Delete a few Alumni_details
     * const { count } = await prisma.alumni_details.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends alumni_detailsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, alumni_detailsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Alumni_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alumni_detailsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Alumni_details
     * const alumni_details = await prisma.alumni_details.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends alumni_detailsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, alumni_detailsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Alumni_details.
     * @param {alumni_detailsUpsertArgs} args - Arguments to update or create a Alumni_details.
     * @example
     * // Update or create a Alumni_details
     * const alumni_details = await prisma.alumni_details.upsert({
     *   create: {
     *     // ... data to create a Alumni_details
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Alumni_details we want to update
     *   }
     * })
    **/
    upsert<T extends alumni_detailsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, alumni_detailsUpsertArgs<ExtArgs>>
    ): Prisma__alumni_detailsClient<$Result.GetResult<Prisma.$alumni_detailsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Alumni_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alumni_detailsCountArgs} args - Arguments to filter Alumni_details to count.
     * @example
     * // Count the number of Alumni_details
     * const count = await prisma.alumni_details.count({
     *   where: {
     *     // ... the filter for the Alumni_details we want to count
     *   }
     * })
    **/
    count<T extends alumni_detailsCountArgs>(
      args?: Subset<T, alumni_detailsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Alumni_detailsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Alumni_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Alumni_detailsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Alumni_detailsAggregateArgs>(args: Subset<T, Alumni_detailsAggregateArgs>): Prisma.PrismaPromise<GetAlumni_detailsAggregateType<T>>

    /**
     * Group by Alumni_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alumni_detailsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends alumni_detailsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: alumni_detailsGroupByArgs['orderBy'] }
        : { orderBy?: alumni_detailsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, alumni_detailsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlumni_detailsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the alumni_details model
   */
  readonly fields: alumni_detailsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for alumni_details.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__alumni_detailsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the alumni_details model
   */ 
  interface alumni_detailsFieldRefs {
    readonly uid: FieldRef<"alumni_details", 'Int'>
    readonly name: FieldRef<"alumni_details", 'String'>
    readonly regno: FieldRef<"alumni_details", 'String'>
    readonly department: FieldRef<"alumni_details", 'String'>
    readonly phone: FieldRef<"alumni_details", 'String'>
    readonly email: FieldRef<"alumni_details", 'String'>
    readonly image: FieldRef<"alumni_details", 'String'>
    readonly domain: FieldRef<"alumni_details", 'String'>
    readonly company: FieldRef<"alumni_details", 'String'>
    readonly city: FieldRef<"alumni_details", 'String'>
    readonly pass_year: FieldRef<"alumni_details", 'String'>
  }
    

  // Custom InputTypes
  /**
   * alumni_details findUnique
   */
  export type alumni_detailsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alumni_details
     */
    select?: alumni_detailsSelect<ExtArgs> | null
    /**
     * Filter, which alumni_details to fetch.
     */
    where: alumni_detailsWhereUniqueInput
  }

  /**
   * alumni_details findUniqueOrThrow
   */
  export type alumni_detailsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alumni_details
     */
    select?: alumni_detailsSelect<ExtArgs> | null
    /**
     * Filter, which alumni_details to fetch.
     */
    where: alumni_detailsWhereUniqueInput
  }

  /**
   * alumni_details findFirst
   */
  export type alumni_detailsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alumni_details
     */
    select?: alumni_detailsSelect<ExtArgs> | null
    /**
     * Filter, which alumni_details to fetch.
     */
    where?: alumni_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alumni_details to fetch.
     */
    orderBy?: alumni_detailsOrderByWithRelationInput | alumni_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for alumni_details.
     */
    cursor?: alumni_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alumni_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alumni_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of alumni_details.
     */
    distinct?: Alumni_detailsScalarFieldEnum | Alumni_detailsScalarFieldEnum[]
  }

  /**
   * alumni_details findFirstOrThrow
   */
  export type alumni_detailsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alumni_details
     */
    select?: alumni_detailsSelect<ExtArgs> | null
    /**
     * Filter, which alumni_details to fetch.
     */
    where?: alumni_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alumni_details to fetch.
     */
    orderBy?: alumni_detailsOrderByWithRelationInput | alumni_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for alumni_details.
     */
    cursor?: alumni_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alumni_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alumni_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of alumni_details.
     */
    distinct?: Alumni_detailsScalarFieldEnum | Alumni_detailsScalarFieldEnum[]
  }

  /**
   * alumni_details findMany
   */
  export type alumni_detailsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alumni_details
     */
    select?: alumni_detailsSelect<ExtArgs> | null
    /**
     * Filter, which alumni_details to fetch.
     */
    where?: alumni_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alumni_details to fetch.
     */
    orderBy?: alumni_detailsOrderByWithRelationInput | alumni_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing alumni_details.
     */
    cursor?: alumni_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alumni_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alumni_details.
     */
    skip?: number
    distinct?: Alumni_detailsScalarFieldEnum | Alumni_detailsScalarFieldEnum[]
  }

  /**
   * alumni_details create
   */
  export type alumni_detailsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alumni_details
     */
    select?: alumni_detailsSelect<ExtArgs> | null
    /**
     * The data needed to create a alumni_details.
     */
    data: XOR<alumni_detailsCreateInput, alumni_detailsUncheckedCreateInput>
  }

  /**
   * alumni_details createMany
   */
  export type alumni_detailsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many alumni_details.
     */
    data: alumni_detailsCreateManyInput | alumni_detailsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * alumni_details update
   */
  export type alumni_detailsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alumni_details
     */
    select?: alumni_detailsSelect<ExtArgs> | null
    /**
     * The data needed to update a alumni_details.
     */
    data: XOR<alumni_detailsUpdateInput, alumni_detailsUncheckedUpdateInput>
    /**
     * Choose, which alumni_details to update.
     */
    where: alumni_detailsWhereUniqueInput
  }

  /**
   * alumni_details updateMany
   */
  export type alumni_detailsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update alumni_details.
     */
    data: XOR<alumni_detailsUpdateManyMutationInput, alumni_detailsUncheckedUpdateManyInput>
    /**
     * Filter which alumni_details to update
     */
    where?: alumni_detailsWhereInput
  }

  /**
   * alumni_details upsert
   */
  export type alumni_detailsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alumni_details
     */
    select?: alumni_detailsSelect<ExtArgs> | null
    /**
     * The filter to search for the alumni_details to update in case it exists.
     */
    where: alumni_detailsWhereUniqueInput
    /**
     * In case the alumni_details found by the `where` argument doesn't exist, create a new alumni_details with this data.
     */
    create: XOR<alumni_detailsCreateInput, alumni_detailsUncheckedCreateInput>
    /**
     * In case the alumni_details was found with the provided `where` argument, update it with this data.
     */
    update: XOR<alumni_detailsUpdateInput, alumni_detailsUncheckedUpdateInput>
  }

  /**
   * alumni_details delete
   */
  export type alumni_detailsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alumni_details
     */
    select?: alumni_detailsSelect<ExtArgs> | null
    /**
     * Filter which alumni_details to delete.
     */
    where: alumni_detailsWhereUniqueInput
  }

  /**
   * alumni_details deleteMany
   */
  export type alumni_detailsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which alumni_details to delete
     */
    where?: alumni_detailsWhereInput
  }

  /**
   * alumni_details without action
   */
  export type alumni_detailsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alumni_details
     */
    select?: alumni_detailsSelect<ExtArgs> | null
  }


  /**
   * Model alumni_interaction_program
   */

  export type AggregateAlumni_interaction_program = {
    _count: Alumni_interaction_programCountAggregateOutputType | null
    _avg: Alumni_interaction_programAvgAggregateOutputType | null
    _sum: Alumni_interaction_programSumAggregateOutputType | null
    _min: Alumni_interaction_programMinAggregateOutputType | null
    _max: Alumni_interaction_programMaxAggregateOutputType | null
  }

  export type Alumni_interaction_programAvgAggregateOutputType = {
    uid: number | null
  }

  export type Alumni_interaction_programSumAggregateOutputType = {
    uid: number | null
  }

  export type Alumni_interaction_programMinAggregateOutputType = {
    uid: number | null
    alumni_name: string | null
    department: string | null
    date: string | null
    time: string | null
    venue: string | null
    title: string | null
    email: string | null
  }

  export type Alumni_interaction_programMaxAggregateOutputType = {
    uid: number | null
    alumni_name: string | null
    department: string | null
    date: string | null
    time: string | null
    venue: string | null
    title: string | null
    email: string | null
  }

  export type Alumni_interaction_programCountAggregateOutputType = {
    uid: number
    alumni_name: number
    department: number
    date: number
    time: number
    venue: number
    title: number
    email: number
    _all: number
  }


  export type Alumni_interaction_programAvgAggregateInputType = {
    uid?: true
  }

  export type Alumni_interaction_programSumAggregateInputType = {
    uid?: true
  }

  export type Alumni_interaction_programMinAggregateInputType = {
    uid?: true
    alumni_name?: true
    department?: true
    date?: true
    time?: true
    venue?: true
    title?: true
    email?: true
  }

  export type Alumni_interaction_programMaxAggregateInputType = {
    uid?: true
    alumni_name?: true
    department?: true
    date?: true
    time?: true
    venue?: true
    title?: true
    email?: true
  }

  export type Alumni_interaction_programCountAggregateInputType = {
    uid?: true
    alumni_name?: true
    department?: true
    date?: true
    time?: true
    venue?: true
    title?: true
    email?: true
    _all?: true
  }

  export type Alumni_interaction_programAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which alumni_interaction_program to aggregate.
     */
    where?: alumni_interaction_programWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alumni_interaction_programs to fetch.
     */
    orderBy?: alumni_interaction_programOrderByWithRelationInput | alumni_interaction_programOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: alumni_interaction_programWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alumni_interaction_programs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alumni_interaction_programs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned alumni_interaction_programs
    **/
    _count?: true | Alumni_interaction_programCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Alumni_interaction_programAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Alumni_interaction_programSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Alumni_interaction_programMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Alumni_interaction_programMaxAggregateInputType
  }

  export type GetAlumni_interaction_programAggregateType<T extends Alumni_interaction_programAggregateArgs> = {
        [P in keyof T & keyof AggregateAlumni_interaction_program]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAlumni_interaction_program[P]>
      : GetScalarType<T[P], AggregateAlumni_interaction_program[P]>
  }




  export type alumni_interaction_programGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: alumni_interaction_programWhereInput
    orderBy?: alumni_interaction_programOrderByWithAggregationInput | alumni_interaction_programOrderByWithAggregationInput[]
    by: Alumni_interaction_programScalarFieldEnum[] | Alumni_interaction_programScalarFieldEnum
    having?: alumni_interaction_programScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Alumni_interaction_programCountAggregateInputType | true
    _avg?: Alumni_interaction_programAvgAggregateInputType
    _sum?: Alumni_interaction_programSumAggregateInputType
    _min?: Alumni_interaction_programMinAggregateInputType
    _max?: Alumni_interaction_programMaxAggregateInputType
  }

  export type Alumni_interaction_programGroupByOutputType = {
    uid: number
    alumni_name: string
    department: string
    date: string
    time: string
    venue: string
    title: string
    email: string
    _count: Alumni_interaction_programCountAggregateOutputType | null
    _avg: Alumni_interaction_programAvgAggregateOutputType | null
    _sum: Alumni_interaction_programSumAggregateOutputType | null
    _min: Alumni_interaction_programMinAggregateOutputType | null
    _max: Alumni_interaction_programMaxAggregateOutputType | null
  }

  type GetAlumni_interaction_programGroupByPayload<T extends alumni_interaction_programGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Alumni_interaction_programGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Alumni_interaction_programGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Alumni_interaction_programGroupByOutputType[P]>
            : GetScalarType<T[P], Alumni_interaction_programGroupByOutputType[P]>
        }
      >
    >


  export type alumni_interaction_programSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uid?: boolean
    alumni_name?: boolean
    department?: boolean
    date?: boolean
    time?: boolean
    venue?: boolean
    title?: boolean
    email?: boolean
  }, ExtArgs["result"]["alumni_interaction_program"]>

  export type alumni_interaction_programSelectScalar = {
    uid?: boolean
    alumni_name?: boolean
    department?: boolean
    date?: boolean
    time?: boolean
    venue?: boolean
    title?: boolean
    email?: boolean
  }



  export type $alumni_interaction_programPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "alumni_interaction_program"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      uid: number
      alumni_name: string
      department: string
      date: string
      time: string
      venue: string
      title: string
      email: string
    }, ExtArgs["result"]["alumni_interaction_program"]>
    composites: {}
  }


  type alumni_interaction_programGetPayload<S extends boolean | null | undefined | alumni_interaction_programDefaultArgs> = $Result.GetResult<Prisma.$alumni_interaction_programPayload, S>

  type alumni_interaction_programCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<alumni_interaction_programFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Alumni_interaction_programCountAggregateInputType | true
    }

  export interface alumni_interaction_programDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['alumni_interaction_program'], meta: { name: 'alumni_interaction_program' } }
    /**
     * Find zero or one Alumni_interaction_program that matches the filter.
     * @param {alumni_interaction_programFindUniqueArgs} args - Arguments to find a Alumni_interaction_program
     * @example
     * // Get one Alumni_interaction_program
     * const alumni_interaction_program = await prisma.alumni_interaction_program.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends alumni_interaction_programFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, alumni_interaction_programFindUniqueArgs<ExtArgs>>
    ): Prisma__alumni_interaction_programClient<$Result.GetResult<Prisma.$alumni_interaction_programPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Alumni_interaction_program that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {alumni_interaction_programFindUniqueOrThrowArgs} args - Arguments to find a Alumni_interaction_program
     * @example
     * // Get one Alumni_interaction_program
     * const alumni_interaction_program = await prisma.alumni_interaction_program.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends alumni_interaction_programFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, alumni_interaction_programFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__alumni_interaction_programClient<$Result.GetResult<Prisma.$alumni_interaction_programPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Alumni_interaction_program that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alumni_interaction_programFindFirstArgs} args - Arguments to find a Alumni_interaction_program
     * @example
     * // Get one Alumni_interaction_program
     * const alumni_interaction_program = await prisma.alumni_interaction_program.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends alumni_interaction_programFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, alumni_interaction_programFindFirstArgs<ExtArgs>>
    ): Prisma__alumni_interaction_programClient<$Result.GetResult<Prisma.$alumni_interaction_programPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Alumni_interaction_program that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alumni_interaction_programFindFirstOrThrowArgs} args - Arguments to find a Alumni_interaction_program
     * @example
     * // Get one Alumni_interaction_program
     * const alumni_interaction_program = await prisma.alumni_interaction_program.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends alumni_interaction_programFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, alumni_interaction_programFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__alumni_interaction_programClient<$Result.GetResult<Prisma.$alumni_interaction_programPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Alumni_interaction_programs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alumni_interaction_programFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Alumni_interaction_programs
     * const alumni_interaction_programs = await prisma.alumni_interaction_program.findMany()
     * 
     * // Get first 10 Alumni_interaction_programs
     * const alumni_interaction_programs = await prisma.alumni_interaction_program.findMany({ take: 10 })
     * 
     * // Only select the `uid`
     * const alumni_interaction_programWithUidOnly = await prisma.alumni_interaction_program.findMany({ select: { uid: true } })
     * 
    **/
    findMany<T extends alumni_interaction_programFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, alumni_interaction_programFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alumni_interaction_programPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Alumni_interaction_program.
     * @param {alumni_interaction_programCreateArgs} args - Arguments to create a Alumni_interaction_program.
     * @example
     * // Create one Alumni_interaction_program
     * const Alumni_interaction_program = await prisma.alumni_interaction_program.create({
     *   data: {
     *     // ... data to create a Alumni_interaction_program
     *   }
     * })
     * 
    **/
    create<T extends alumni_interaction_programCreateArgs<ExtArgs>>(
      args: SelectSubset<T, alumni_interaction_programCreateArgs<ExtArgs>>
    ): Prisma__alumni_interaction_programClient<$Result.GetResult<Prisma.$alumni_interaction_programPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Alumni_interaction_programs.
     * @param {alumni_interaction_programCreateManyArgs} args - Arguments to create many Alumni_interaction_programs.
     * @example
     * // Create many Alumni_interaction_programs
     * const alumni_interaction_program = await prisma.alumni_interaction_program.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends alumni_interaction_programCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, alumni_interaction_programCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Alumni_interaction_program.
     * @param {alumni_interaction_programDeleteArgs} args - Arguments to delete one Alumni_interaction_program.
     * @example
     * // Delete one Alumni_interaction_program
     * const Alumni_interaction_program = await prisma.alumni_interaction_program.delete({
     *   where: {
     *     // ... filter to delete one Alumni_interaction_program
     *   }
     * })
     * 
    **/
    delete<T extends alumni_interaction_programDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, alumni_interaction_programDeleteArgs<ExtArgs>>
    ): Prisma__alumni_interaction_programClient<$Result.GetResult<Prisma.$alumni_interaction_programPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Alumni_interaction_program.
     * @param {alumni_interaction_programUpdateArgs} args - Arguments to update one Alumni_interaction_program.
     * @example
     * // Update one Alumni_interaction_program
     * const alumni_interaction_program = await prisma.alumni_interaction_program.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends alumni_interaction_programUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, alumni_interaction_programUpdateArgs<ExtArgs>>
    ): Prisma__alumni_interaction_programClient<$Result.GetResult<Prisma.$alumni_interaction_programPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Alumni_interaction_programs.
     * @param {alumni_interaction_programDeleteManyArgs} args - Arguments to filter Alumni_interaction_programs to delete.
     * @example
     * // Delete a few Alumni_interaction_programs
     * const { count } = await prisma.alumni_interaction_program.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends alumni_interaction_programDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, alumni_interaction_programDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Alumni_interaction_programs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alumni_interaction_programUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Alumni_interaction_programs
     * const alumni_interaction_program = await prisma.alumni_interaction_program.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends alumni_interaction_programUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, alumni_interaction_programUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Alumni_interaction_program.
     * @param {alumni_interaction_programUpsertArgs} args - Arguments to update or create a Alumni_interaction_program.
     * @example
     * // Update or create a Alumni_interaction_program
     * const alumni_interaction_program = await prisma.alumni_interaction_program.upsert({
     *   create: {
     *     // ... data to create a Alumni_interaction_program
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Alumni_interaction_program we want to update
     *   }
     * })
    **/
    upsert<T extends alumni_interaction_programUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, alumni_interaction_programUpsertArgs<ExtArgs>>
    ): Prisma__alumni_interaction_programClient<$Result.GetResult<Prisma.$alumni_interaction_programPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Alumni_interaction_programs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alumni_interaction_programCountArgs} args - Arguments to filter Alumni_interaction_programs to count.
     * @example
     * // Count the number of Alumni_interaction_programs
     * const count = await prisma.alumni_interaction_program.count({
     *   where: {
     *     // ... the filter for the Alumni_interaction_programs we want to count
     *   }
     * })
    **/
    count<T extends alumni_interaction_programCountArgs>(
      args?: Subset<T, alumni_interaction_programCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Alumni_interaction_programCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Alumni_interaction_program.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Alumni_interaction_programAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Alumni_interaction_programAggregateArgs>(args: Subset<T, Alumni_interaction_programAggregateArgs>): Prisma.PrismaPromise<GetAlumni_interaction_programAggregateType<T>>

    /**
     * Group by Alumni_interaction_program.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alumni_interaction_programGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends alumni_interaction_programGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: alumni_interaction_programGroupByArgs['orderBy'] }
        : { orderBy?: alumni_interaction_programGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, alumni_interaction_programGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlumni_interaction_programGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the alumni_interaction_program model
   */
  readonly fields: alumni_interaction_programFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for alumni_interaction_program.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__alumni_interaction_programClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the alumni_interaction_program model
   */ 
  interface alumni_interaction_programFieldRefs {
    readonly uid: FieldRef<"alumni_interaction_program", 'Int'>
    readonly alumni_name: FieldRef<"alumni_interaction_program", 'String'>
    readonly department: FieldRef<"alumni_interaction_program", 'String'>
    readonly date: FieldRef<"alumni_interaction_program", 'String'>
    readonly time: FieldRef<"alumni_interaction_program", 'String'>
    readonly venue: FieldRef<"alumni_interaction_program", 'String'>
    readonly title: FieldRef<"alumni_interaction_program", 'String'>
    readonly email: FieldRef<"alumni_interaction_program", 'String'>
  }
    

  // Custom InputTypes
  /**
   * alumni_interaction_program findUnique
   */
  export type alumni_interaction_programFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alumni_interaction_program
     */
    select?: alumni_interaction_programSelect<ExtArgs> | null
    /**
     * Filter, which alumni_interaction_program to fetch.
     */
    where: alumni_interaction_programWhereUniqueInput
  }

  /**
   * alumni_interaction_program findUniqueOrThrow
   */
  export type alumni_interaction_programFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alumni_interaction_program
     */
    select?: alumni_interaction_programSelect<ExtArgs> | null
    /**
     * Filter, which alumni_interaction_program to fetch.
     */
    where: alumni_interaction_programWhereUniqueInput
  }

  /**
   * alumni_interaction_program findFirst
   */
  export type alumni_interaction_programFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alumni_interaction_program
     */
    select?: alumni_interaction_programSelect<ExtArgs> | null
    /**
     * Filter, which alumni_interaction_program to fetch.
     */
    where?: alumni_interaction_programWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alumni_interaction_programs to fetch.
     */
    orderBy?: alumni_interaction_programOrderByWithRelationInput | alumni_interaction_programOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for alumni_interaction_programs.
     */
    cursor?: alumni_interaction_programWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alumni_interaction_programs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alumni_interaction_programs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of alumni_interaction_programs.
     */
    distinct?: Alumni_interaction_programScalarFieldEnum | Alumni_interaction_programScalarFieldEnum[]
  }

  /**
   * alumni_interaction_program findFirstOrThrow
   */
  export type alumni_interaction_programFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alumni_interaction_program
     */
    select?: alumni_interaction_programSelect<ExtArgs> | null
    /**
     * Filter, which alumni_interaction_program to fetch.
     */
    where?: alumni_interaction_programWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alumni_interaction_programs to fetch.
     */
    orderBy?: alumni_interaction_programOrderByWithRelationInput | alumni_interaction_programOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for alumni_interaction_programs.
     */
    cursor?: alumni_interaction_programWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alumni_interaction_programs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alumni_interaction_programs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of alumni_interaction_programs.
     */
    distinct?: Alumni_interaction_programScalarFieldEnum | Alumni_interaction_programScalarFieldEnum[]
  }

  /**
   * alumni_interaction_program findMany
   */
  export type alumni_interaction_programFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alumni_interaction_program
     */
    select?: alumni_interaction_programSelect<ExtArgs> | null
    /**
     * Filter, which alumni_interaction_programs to fetch.
     */
    where?: alumni_interaction_programWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alumni_interaction_programs to fetch.
     */
    orderBy?: alumni_interaction_programOrderByWithRelationInput | alumni_interaction_programOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing alumni_interaction_programs.
     */
    cursor?: alumni_interaction_programWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alumni_interaction_programs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alumni_interaction_programs.
     */
    skip?: number
    distinct?: Alumni_interaction_programScalarFieldEnum | Alumni_interaction_programScalarFieldEnum[]
  }

  /**
   * alumni_interaction_program create
   */
  export type alumni_interaction_programCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alumni_interaction_program
     */
    select?: alumni_interaction_programSelect<ExtArgs> | null
    /**
     * The data needed to create a alumni_interaction_program.
     */
    data: XOR<alumni_interaction_programCreateInput, alumni_interaction_programUncheckedCreateInput>
  }

  /**
   * alumni_interaction_program createMany
   */
  export type alumni_interaction_programCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many alumni_interaction_programs.
     */
    data: alumni_interaction_programCreateManyInput | alumni_interaction_programCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * alumni_interaction_program update
   */
  export type alumni_interaction_programUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alumni_interaction_program
     */
    select?: alumni_interaction_programSelect<ExtArgs> | null
    /**
     * The data needed to update a alumni_interaction_program.
     */
    data: XOR<alumni_interaction_programUpdateInput, alumni_interaction_programUncheckedUpdateInput>
    /**
     * Choose, which alumni_interaction_program to update.
     */
    where: alumni_interaction_programWhereUniqueInput
  }

  /**
   * alumni_interaction_program updateMany
   */
  export type alumni_interaction_programUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update alumni_interaction_programs.
     */
    data: XOR<alumni_interaction_programUpdateManyMutationInput, alumni_interaction_programUncheckedUpdateManyInput>
    /**
     * Filter which alumni_interaction_programs to update
     */
    where?: alumni_interaction_programWhereInput
  }

  /**
   * alumni_interaction_program upsert
   */
  export type alumni_interaction_programUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alumni_interaction_program
     */
    select?: alumni_interaction_programSelect<ExtArgs> | null
    /**
     * The filter to search for the alumni_interaction_program to update in case it exists.
     */
    where: alumni_interaction_programWhereUniqueInput
    /**
     * In case the alumni_interaction_program found by the `where` argument doesn't exist, create a new alumni_interaction_program with this data.
     */
    create: XOR<alumni_interaction_programCreateInput, alumni_interaction_programUncheckedCreateInput>
    /**
     * In case the alumni_interaction_program was found with the provided `where` argument, update it with this data.
     */
    update: XOR<alumni_interaction_programUpdateInput, alumni_interaction_programUncheckedUpdateInput>
  }

  /**
   * alumni_interaction_program delete
   */
  export type alumni_interaction_programDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alumni_interaction_program
     */
    select?: alumni_interaction_programSelect<ExtArgs> | null
    /**
     * Filter which alumni_interaction_program to delete.
     */
    where: alumni_interaction_programWhereUniqueInput
  }

  /**
   * alumni_interaction_program deleteMany
   */
  export type alumni_interaction_programDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which alumni_interaction_programs to delete
     */
    where?: alumni_interaction_programWhereInput
  }

  /**
   * alumni_interaction_program without action
   */
  export type alumni_interaction_programDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alumni_interaction_program
     */
    select?: alumni_interaction_programSelect<ExtArgs> | null
  }


  /**
   * Model staff_details
   */

  export type AggregateStaff_details = {
    _count: Staff_detailsCountAggregateOutputType | null
    _avg: Staff_detailsAvgAggregateOutputType | null
    _sum: Staff_detailsSumAggregateOutputType | null
    _min: Staff_detailsMinAggregateOutputType | null
    _max: Staff_detailsMaxAggregateOutputType | null
  }

  export type Staff_detailsAvgAggregateOutputType = {
    uid: number | null
  }

  export type Staff_detailsSumAggregateOutputType = {
    uid: number | null
  }

  export type Staff_detailsMinAggregateOutputType = {
    uid: number | null
    name: string | null
    department: string | null
    id: string | null
    phone: string | null
    email: string | null
    image: string | null
    domain: string | null
    doj: string | null
    college_name: string | null
    description: string | null
    experience: string | null
  }

  export type Staff_detailsMaxAggregateOutputType = {
    uid: number | null
    name: string | null
    department: string | null
    id: string | null
    phone: string | null
    email: string | null
    image: string | null
    domain: string | null
    doj: string | null
    college_name: string | null
    description: string | null
    experience: string | null
  }

  export type Staff_detailsCountAggregateOutputType = {
    uid: number
    name: number
    department: number
    id: number
    phone: number
    email: number
    image: number
    domain: number
    doj: number
    college_name: number
    description: number
    experience: number
    _all: number
  }


  export type Staff_detailsAvgAggregateInputType = {
    uid?: true
  }

  export type Staff_detailsSumAggregateInputType = {
    uid?: true
  }

  export type Staff_detailsMinAggregateInputType = {
    uid?: true
    name?: true
    department?: true
    id?: true
    phone?: true
    email?: true
    image?: true
    domain?: true
    doj?: true
    college_name?: true
    description?: true
    experience?: true
  }

  export type Staff_detailsMaxAggregateInputType = {
    uid?: true
    name?: true
    department?: true
    id?: true
    phone?: true
    email?: true
    image?: true
    domain?: true
    doj?: true
    college_name?: true
    description?: true
    experience?: true
  }

  export type Staff_detailsCountAggregateInputType = {
    uid?: true
    name?: true
    department?: true
    id?: true
    phone?: true
    email?: true
    image?: true
    domain?: true
    doj?: true
    college_name?: true
    description?: true
    experience?: true
    _all?: true
  }

  export type Staff_detailsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which staff_details to aggregate.
     */
    where?: staff_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of staff_details to fetch.
     */
    orderBy?: staff_detailsOrderByWithRelationInput | staff_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: staff_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` staff_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` staff_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned staff_details
    **/
    _count?: true | Staff_detailsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Staff_detailsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Staff_detailsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Staff_detailsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Staff_detailsMaxAggregateInputType
  }

  export type GetStaff_detailsAggregateType<T extends Staff_detailsAggregateArgs> = {
        [P in keyof T & keyof AggregateStaff_details]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStaff_details[P]>
      : GetScalarType<T[P], AggregateStaff_details[P]>
  }




  export type staff_detailsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: staff_detailsWhereInput
    orderBy?: staff_detailsOrderByWithAggregationInput | staff_detailsOrderByWithAggregationInput[]
    by: Staff_detailsScalarFieldEnum[] | Staff_detailsScalarFieldEnum
    having?: staff_detailsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Staff_detailsCountAggregateInputType | true
    _avg?: Staff_detailsAvgAggregateInputType
    _sum?: Staff_detailsSumAggregateInputType
    _min?: Staff_detailsMinAggregateInputType
    _max?: Staff_detailsMaxAggregateInputType
  }

  export type Staff_detailsGroupByOutputType = {
    uid: number
    name: string
    department: string
    id: string
    phone: string
    email: string
    image: string
    domain: string
    doj: string
    college_name: string
    description: string | null
    experience: string
    _count: Staff_detailsCountAggregateOutputType | null
    _avg: Staff_detailsAvgAggregateOutputType | null
    _sum: Staff_detailsSumAggregateOutputType | null
    _min: Staff_detailsMinAggregateOutputType | null
    _max: Staff_detailsMaxAggregateOutputType | null
  }

  type GetStaff_detailsGroupByPayload<T extends staff_detailsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Staff_detailsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Staff_detailsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Staff_detailsGroupByOutputType[P]>
            : GetScalarType<T[P], Staff_detailsGroupByOutputType[P]>
        }
      >
    >


  export type staff_detailsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uid?: boolean
    name?: boolean
    department?: boolean
    id?: boolean
    phone?: boolean
    email?: boolean
    image?: boolean
    domain?: boolean
    doj?: boolean
    college_name?: boolean
    description?: boolean
    experience?: boolean
  }, ExtArgs["result"]["staff_details"]>

  export type staff_detailsSelectScalar = {
    uid?: boolean
    name?: boolean
    department?: boolean
    id?: boolean
    phone?: boolean
    email?: boolean
    image?: boolean
    domain?: boolean
    doj?: boolean
    college_name?: boolean
    description?: boolean
    experience?: boolean
  }



  export type $staff_detailsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "staff_details"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      uid: number
      name: string
      department: string
      id: string
      phone: string
      email: string
      image: string
      domain: string
      doj: string
      college_name: string
      description: string | null
      experience: string
    }, ExtArgs["result"]["staff_details"]>
    composites: {}
  }


  type staff_detailsGetPayload<S extends boolean | null | undefined | staff_detailsDefaultArgs> = $Result.GetResult<Prisma.$staff_detailsPayload, S>

  type staff_detailsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<staff_detailsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Staff_detailsCountAggregateInputType | true
    }

  export interface staff_detailsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['staff_details'], meta: { name: 'staff_details' } }
    /**
     * Find zero or one Staff_details that matches the filter.
     * @param {staff_detailsFindUniqueArgs} args - Arguments to find a Staff_details
     * @example
     * // Get one Staff_details
     * const staff_details = await prisma.staff_details.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends staff_detailsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, staff_detailsFindUniqueArgs<ExtArgs>>
    ): Prisma__staff_detailsClient<$Result.GetResult<Prisma.$staff_detailsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Staff_details that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {staff_detailsFindUniqueOrThrowArgs} args - Arguments to find a Staff_details
     * @example
     * // Get one Staff_details
     * const staff_details = await prisma.staff_details.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends staff_detailsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, staff_detailsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__staff_detailsClient<$Result.GetResult<Prisma.$staff_detailsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Staff_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staff_detailsFindFirstArgs} args - Arguments to find a Staff_details
     * @example
     * // Get one Staff_details
     * const staff_details = await prisma.staff_details.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends staff_detailsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, staff_detailsFindFirstArgs<ExtArgs>>
    ): Prisma__staff_detailsClient<$Result.GetResult<Prisma.$staff_detailsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Staff_details that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staff_detailsFindFirstOrThrowArgs} args - Arguments to find a Staff_details
     * @example
     * // Get one Staff_details
     * const staff_details = await prisma.staff_details.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends staff_detailsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, staff_detailsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__staff_detailsClient<$Result.GetResult<Prisma.$staff_detailsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Staff_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staff_detailsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Staff_details
     * const staff_details = await prisma.staff_details.findMany()
     * 
     * // Get first 10 Staff_details
     * const staff_details = await prisma.staff_details.findMany({ take: 10 })
     * 
     * // Only select the `uid`
     * const staff_detailsWithUidOnly = await prisma.staff_details.findMany({ select: { uid: true } })
     * 
    **/
    findMany<T extends staff_detailsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, staff_detailsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$staff_detailsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Staff_details.
     * @param {staff_detailsCreateArgs} args - Arguments to create a Staff_details.
     * @example
     * // Create one Staff_details
     * const Staff_details = await prisma.staff_details.create({
     *   data: {
     *     // ... data to create a Staff_details
     *   }
     * })
     * 
    **/
    create<T extends staff_detailsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, staff_detailsCreateArgs<ExtArgs>>
    ): Prisma__staff_detailsClient<$Result.GetResult<Prisma.$staff_detailsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Staff_details.
     * @param {staff_detailsCreateManyArgs} args - Arguments to create many Staff_details.
     * @example
     * // Create many Staff_details
     * const staff_details = await prisma.staff_details.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends staff_detailsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, staff_detailsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Staff_details.
     * @param {staff_detailsDeleteArgs} args - Arguments to delete one Staff_details.
     * @example
     * // Delete one Staff_details
     * const Staff_details = await prisma.staff_details.delete({
     *   where: {
     *     // ... filter to delete one Staff_details
     *   }
     * })
     * 
    **/
    delete<T extends staff_detailsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, staff_detailsDeleteArgs<ExtArgs>>
    ): Prisma__staff_detailsClient<$Result.GetResult<Prisma.$staff_detailsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Staff_details.
     * @param {staff_detailsUpdateArgs} args - Arguments to update one Staff_details.
     * @example
     * // Update one Staff_details
     * const staff_details = await prisma.staff_details.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends staff_detailsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, staff_detailsUpdateArgs<ExtArgs>>
    ): Prisma__staff_detailsClient<$Result.GetResult<Prisma.$staff_detailsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Staff_details.
     * @param {staff_detailsDeleteManyArgs} args - Arguments to filter Staff_details to delete.
     * @example
     * // Delete a few Staff_details
     * const { count } = await prisma.staff_details.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends staff_detailsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, staff_detailsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Staff_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staff_detailsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Staff_details
     * const staff_details = await prisma.staff_details.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends staff_detailsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, staff_detailsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Staff_details.
     * @param {staff_detailsUpsertArgs} args - Arguments to update or create a Staff_details.
     * @example
     * // Update or create a Staff_details
     * const staff_details = await prisma.staff_details.upsert({
     *   create: {
     *     // ... data to create a Staff_details
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Staff_details we want to update
     *   }
     * })
    **/
    upsert<T extends staff_detailsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, staff_detailsUpsertArgs<ExtArgs>>
    ): Prisma__staff_detailsClient<$Result.GetResult<Prisma.$staff_detailsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Staff_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staff_detailsCountArgs} args - Arguments to filter Staff_details to count.
     * @example
     * // Count the number of Staff_details
     * const count = await prisma.staff_details.count({
     *   where: {
     *     // ... the filter for the Staff_details we want to count
     *   }
     * })
    **/
    count<T extends staff_detailsCountArgs>(
      args?: Subset<T, staff_detailsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Staff_detailsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Staff_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Staff_detailsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Staff_detailsAggregateArgs>(args: Subset<T, Staff_detailsAggregateArgs>): Prisma.PrismaPromise<GetStaff_detailsAggregateType<T>>

    /**
     * Group by Staff_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {staff_detailsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends staff_detailsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: staff_detailsGroupByArgs['orderBy'] }
        : { orderBy?: staff_detailsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, staff_detailsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStaff_detailsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the staff_details model
   */
  readonly fields: staff_detailsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for staff_details.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__staff_detailsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the staff_details model
   */ 
  interface staff_detailsFieldRefs {
    readonly uid: FieldRef<"staff_details", 'Int'>
    readonly name: FieldRef<"staff_details", 'String'>
    readonly department: FieldRef<"staff_details", 'String'>
    readonly id: FieldRef<"staff_details", 'String'>
    readonly phone: FieldRef<"staff_details", 'String'>
    readonly email: FieldRef<"staff_details", 'String'>
    readonly image: FieldRef<"staff_details", 'String'>
    readonly domain: FieldRef<"staff_details", 'String'>
    readonly doj: FieldRef<"staff_details", 'String'>
    readonly college_name: FieldRef<"staff_details", 'String'>
    readonly description: FieldRef<"staff_details", 'String'>
    readonly experience: FieldRef<"staff_details", 'String'>
  }
    

  // Custom InputTypes
  /**
   * staff_details findUnique
   */
  export type staff_detailsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_details
     */
    select?: staff_detailsSelect<ExtArgs> | null
    /**
     * Filter, which staff_details to fetch.
     */
    where: staff_detailsWhereUniqueInput
  }

  /**
   * staff_details findUniqueOrThrow
   */
  export type staff_detailsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_details
     */
    select?: staff_detailsSelect<ExtArgs> | null
    /**
     * Filter, which staff_details to fetch.
     */
    where: staff_detailsWhereUniqueInput
  }

  /**
   * staff_details findFirst
   */
  export type staff_detailsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_details
     */
    select?: staff_detailsSelect<ExtArgs> | null
    /**
     * Filter, which staff_details to fetch.
     */
    where?: staff_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of staff_details to fetch.
     */
    orderBy?: staff_detailsOrderByWithRelationInput | staff_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for staff_details.
     */
    cursor?: staff_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` staff_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` staff_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of staff_details.
     */
    distinct?: Staff_detailsScalarFieldEnum | Staff_detailsScalarFieldEnum[]
  }

  /**
   * staff_details findFirstOrThrow
   */
  export type staff_detailsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_details
     */
    select?: staff_detailsSelect<ExtArgs> | null
    /**
     * Filter, which staff_details to fetch.
     */
    where?: staff_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of staff_details to fetch.
     */
    orderBy?: staff_detailsOrderByWithRelationInput | staff_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for staff_details.
     */
    cursor?: staff_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` staff_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` staff_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of staff_details.
     */
    distinct?: Staff_detailsScalarFieldEnum | Staff_detailsScalarFieldEnum[]
  }

  /**
   * staff_details findMany
   */
  export type staff_detailsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_details
     */
    select?: staff_detailsSelect<ExtArgs> | null
    /**
     * Filter, which staff_details to fetch.
     */
    where?: staff_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of staff_details to fetch.
     */
    orderBy?: staff_detailsOrderByWithRelationInput | staff_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing staff_details.
     */
    cursor?: staff_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` staff_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` staff_details.
     */
    skip?: number
    distinct?: Staff_detailsScalarFieldEnum | Staff_detailsScalarFieldEnum[]
  }

  /**
   * staff_details create
   */
  export type staff_detailsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_details
     */
    select?: staff_detailsSelect<ExtArgs> | null
    /**
     * The data needed to create a staff_details.
     */
    data: XOR<staff_detailsCreateInput, staff_detailsUncheckedCreateInput>
  }

  /**
   * staff_details createMany
   */
  export type staff_detailsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many staff_details.
     */
    data: staff_detailsCreateManyInput | staff_detailsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * staff_details update
   */
  export type staff_detailsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_details
     */
    select?: staff_detailsSelect<ExtArgs> | null
    /**
     * The data needed to update a staff_details.
     */
    data: XOR<staff_detailsUpdateInput, staff_detailsUncheckedUpdateInput>
    /**
     * Choose, which staff_details to update.
     */
    where: staff_detailsWhereUniqueInput
  }

  /**
   * staff_details updateMany
   */
  export type staff_detailsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update staff_details.
     */
    data: XOR<staff_detailsUpdateManyMutationInput, staff_detailsUncheckedUpdateManyInput>
    /**
     * Filter which staff_details to update
     */
    where?: staff_detailsWhereInput
  }

  /**
   * staff_details upsert
   */
  export type staff_detailsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_details
     */
    select?: staff_detailsSelect<ExtArgs> | null
    /**
     * The filter to search for the staff_details to update in case it exists.
     */
    where: staff_detailsWhereUniqueInput
    /**
     * In case the staff_details found by the `where` argument doesn't exist, create a new staff_details with this data.
     */
    create: XOR<staff_detailsCreateInput, staff_detailsUncheckedCreateInput>
    /**
     * In case the staff_details was found with the provided `where` argument, update it with this data.
     */
    update: XOR<staff_detailsUpdateInput, staff_detailsUncheckedUpdateInput>
  }

  /**
   * staff_details delete
   */
  export type staff_detailsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_details
     */
    select?: staff_detailsSelect<ExtArgs> | null
    /**
     * Filter which staff_details to delete.
     */
    where: staff_detailsWhereUniqueInput
  }

  /**
   * staff_details deleteMany
   */
  export type staff_detailsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which staff_details to delete
     */
    where?: staff_detailsWhereInput
  }

  /**
   * staff_details without action
   */
  export type staff_detailsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the staff_details
     */
    select?: staff_detailsSelect<ExtArgs> | null
  }


  /**
   * Model student_details
   */

  export type AggregateStudent_details = {
    _count: Student_detailsCountAggregateOutputType | null
    _avg: Student_detailsAvgAggregateOutputType | null
    _sum: Student_detailsSumAggregateOutputType | null
    _min: Student_detailsMinAggregateOutputType | null
    _max: Student_detailsMaxAggregateOutputType | null
  }

  export type Student_detailsAvgAggregateOutputType = {
    uid: number | null
  }

  export type Student_detailsSumAggregateOutputType = {
    uid: number | null
  }

  export type Student_detailsMinAggregateOutputType = {
    uid: number | null
    name: string | null
    regno: string | null
    department: string | null
    pass_year: string | null
    image: string | null
    domain: string | null
    college_name: string | null
    phone: string | null
    email: string | null
    city: string | null
    aoi: string | null
    alumni_interaction: string | null
  }

  export type Student_detailsMaxAggregateOutputType = {
    uid: number | null
    name: string | null
    regno: string | null
    department: string | null
    pass_year: string | null
    image: string | null
    domain: string | null
    college_name: string | null
    phone: string | null
    email: string | null
    city: string | null
    aoi: string | null
    alumni_interaction: string | null
  }

  export type Student_detailsCountAggregateOutputType = {
    uid: number
    name: number
    regno: number
    department: number
    pass_year: number
    image: number
    domain: number
    college_name: number
    phone: number
    email: number
    city: number
    aoi: number
    alumni_interaction: number
    _all: number
  }


  export type Student_detailsAvgAggregateInputType = {
    uid?: true
  }

  export type Student_detailsSumAggregateInputType = {
    uid?: true
  }

  export type Student_detailsMinAggregateInputType = {
    uid?: true
    name?: true
    regno?: true
    department?: true
    pass_year?: true
    image?: true
    domain?: true
    college_name?: true
    phone?: true
    email?: true
    city?: true
    aoi?: true
    alumni_interaction?: true
  }

  export type Student_detailsMaxAggregateInputType = {
    uid?: true
    name?: true
    regno?: true
    department?: true
    pass_year?: true
    image?: true
    domain?: true
    college_name?: true
    phone?: true
    email?: true
    city?: true
    aoi?: true
    alumni_interaction?: true
  }

  export type Student_detailsCountAggregateInputType = {
    uid?: true
    name?: true
    regno?: true
    department?: true
    pass_year?: true
    image?: true
    domain?: true
    college_name?: true
    phone?: true
    email?: true
    city?: true
    aoi?: true
    alumni_interaction?: true
    _all?: true
  }

  export type Student_detailsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which student_details to aggregate.
     */
    where?: student_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of student_details to fetch.
     */
    orderBy?: student_detailsOrderByWithRelationInput | student_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: student_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` student_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` student_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned student_details
    **/
    _count?: true | Student_detailsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Student_detailsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Student_detailsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Student_detailsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Student_detailsMaxAggregateInputType
  }

  export type GetStudent_detailsAggregateType<T extends Student_detailsAggregateArgs> = {
        [P in keyof T & keyof AggregateStudent_details]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStudent_details[P]>
      : GetScalarType<T[P], AggregateStudent_details[P]>
  }




  export type student_detailsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: student_detailsWhereInput
    orderBy?: student_detailsOrderByWithAggregationInput | student_detailsOrderByWithAggregationInput[]
    by: Student_detailsScalarFieldEnum[] | Student_detailsScalarFieldEnum
    having?: student_detailsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Student_detailsCountAggregateInputType | true
    _avg?: Student_detailsAvgAggregateInputType
    _sum?: Student_detailsSumAggregateInputType
    _min?: Student_detailsMinAggregateInputType
    _max?: Student_detailsMaxAggregateInputType
  }

  export type Student_detailsGroupByOutputType = {
    uid: number
    name: string
    regno: string
    department: string
    pass_year: string
    image: string
    domain: string
    college_name: string
    phone: string
    email: string
    city: string
    aoi: string
    alumni_interaction: string
    _count: Student_detailsCountAggregateOutputType | null
    _avg: Student_detailsAvgAggregateOutputType | null
    _sum: Student_detailsSumAggregateOutputType | null
    _min: Student_detailsMinAggregateOutputType | null
    _max: Student_detailsMaxAggregateOutputType | null
  }

  type GetStudent_detailsGroupByPayload<T extends student_detailsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Student_detailsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Student_detailsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Student_detailsGroupByOutputType[P]>
            : GetScalarType<T[P], Student_detailsGroupByOutputType[P]>
        }
      >
    >


  export type student_detailsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uid?: boolean
    name?: boolean
    regno?: boolean
    department?: boolean
    pass_year?: boolean
    image?: boolean
    domain?: boolean
    college_name?: boolean
    phone?: boolean
    email?: boolean
    city?: boolean
    aoi?: boolean
    alumni_interaction?: boolean
  }, ExtArgs["result"]["student_details"]>

  export type student_detailsSelectScalar = {
    uid?: boolean
    name?: boolean
    regno?: boolean
    department?: boolean
    pass_year?: boolean
    image?: boolean
    domain?: boolean
    college_name?: boolean
    phone?: boolean
    email?: boolean
    city?: boolean
    aoi?: boolean
    alumni_interaction?: boolean
  }



  export type $student_detailsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "student_details"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      uid: number
      name: string
      regno: string
      department: string
      pass_year: string
      image: string
      domain: string
      college_name: string
      phone: string
      email: string
      city: string
      aoi: string
      alumni_interaction: string
    }, ExtArgs["result"]["student_details"]>
    composites: {}
  }


  type student_detailsGetPayload<S extends boolean | null | undefined | student_detailsDefaultArgs> = $Result.GetResult<Prisma.$student_detailsPayload, S>

  type student_detailsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<student_detailsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Student_detailsCountAggregateInputType | true
    }

  export interface student_detailsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['student_details'], meta: { name: 'student_details' } }
    /**
     * Find zero or one Student_details that matches the filter.
     * @param {student_detailsFindUniqueArgs} args - Arguments to find a Student_details
     * @example
     * // Get one Student_details
     * const student_details = await prisma.student_details.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends student_detailsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, student_detailsFindUniqueArgs<ExtArgs>>
    ): Prisma__student_detailsClient<$Result.GetResult<Prisma.$student_detailsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Student_details that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {student_detailsFindUniqueOrThrowArgs} args - Arguments to find a Student_details
     * @example
     * // Get one Student_details
     * const student_details = await prisma.student_details.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends student_detailsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, student_detailsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__student_detailsClient<$Result.GetResult<Prisma.$student_detailsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Student_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {student_detailsFindFirstArgs} args - Arguments to find a Student_details
     * @example
     * // Get one Student_details
     * const student_details = await prisma.student_details.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends student_detailsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, student_detailsFindFirstArgs<ExtArgs>>
    ): Prisma__student_detailsClient<$Result.GetResult<Prisma.$student_detailsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Student_details that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {student_detailsFindFirstOrThrowArgs} args - Arguments to find a Student_details
     * @example
     * // Get one Student_details
     * const student_details = await prisma.student_details.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends student_detailsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, student_detailsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__student_detailsClient<$Result.GetResult<Prisma.$student_detailsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Student_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {student_detailsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Student_details
     * const student_details = await prisma.student_details.findMany()
     * 
     * // Get first 10 Student_details
     * const student_details = await prisma.student_details.findMany({ take: 10 })
     * 
     * // Only select the `uid`
     * const student_detailsWithUidOnly = await prisma.student_details.findMany({ select: { uid: true } })
     * 
    **/
    findMany<T extends student_detailsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, student_detailsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$student_detailsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Student_details.
     * @param {student_detailsCreateArgs} args - Arguments to create a Student_details.
     * @example
     * // Create one Student_details
     * const Student_details = await prisma.student_details.create({
     *   data: {
     *     // ... data to create a Student_details
     *   }
     * })
     * 
    **/
    create<T extends student_detailsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, student_detailsCreateArgs<ExtArgs>>
    ): Prisma__student_detailsClient<$Result.GetResult<Prisma.$student_detailsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Student_details.
     * @param {student_detailsCreateManyArgs} args - Arguments to create many Student_details.
     * @example
     * // Create many Student_details
     * const student_details = await prisma.student_details.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends student_detailsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, student_detailsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Student_details.
     * @param {student_detailsDeleteArgs} args - Arguments to delete one Student_details.
     * @example
     * // Delete one Student_details
     * const Student_details = await prisma.student_details.delete({
     *   where: {
     *     // ... filter to delete one Student_details
     *   }
     * })
     * 
    **/
    delete<T extends student_detailsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, student_detailsDeleteArgs<ExtArgs>>
    ): Prisma__student_detailsClient<$Result.GetResult<Prisma.$student_detailsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Student_details.
     * @param {student_detailsUpdateArgs} args - Arguments to update one Student_details.
     * @example
     * // Update one Student_details
     * const student_details = await prisma.student_details.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends student_detailsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, student_detailsUpdateArgs<ExtArgs>>
    ): Prisma__student_detailsClient<$Result.GetResult<Prisma.$student_detailsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Student_details.
     * @param {student_detailsDeleteManyArgs} args - Arguments to filter Student_details to delete.
     * @example
     * // Delete a few Student_details
     * const { count } = await prisma.student_details.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends student_detailsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, student_detailsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Student_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {student_detailsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Student_details
     * const student_details = await prisma.student_details.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends student_detailsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, student_detailsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Student_details.
     * @param {student_detailsUpsertArgs} args - Arguments to update or create a Student_details.
     * @example
     * // Update or create a Student_details
     * const student_details = await prisma.student_details.upsert({
     *   create: {
     *     // ... data to create a Student_details
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Student_details we want to update
     *   }
     * })
    **/
    upsert<T extends student_detailsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, student_detailsUpsertArgs<ExtArgs>>
    ): Prisma__student_detailsClient<$Result.GetResult<Prisma.$student_detailsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Student_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {student_detailsCountArgs} args - Arguments to filter Student_details to count.
     * @example
     * // Count the number of Student_details
     * const count = await prisma.student_details.count({
     *   where: {
     *     // ... the filter for the Student_details we want to count
     *   }
     * })
    **/
    count<T extends student_detailsCountArgs>(
      args?: Subset<T, student_detailsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Student_detailsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Student_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Student_detailsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Student_detailsAggregateArgs>(args: Subset<T, Student_detailsAggregateArgs>): Prisma.PrismaPromise<GetStudent_detailsAggregateType<T>>

    /**
     * Group by Student_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {student_detailsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends student_detailsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: student_detailsGroupByArgs['orderBy'] }
        : { orderBy?: student_detailsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, student_detailsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudent_detailsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the student_details model
   */
  readonly fields: student_detailsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for student_details.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__student_detailsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the student_details model
   */ 
  interface student_detailsFieldRefs {
    readonly uid: FieldRef<"student_details", 'Int'>
    readonly name: FieldRef<"student_details", 'String'>
    readonly regno: FieldRef<"student_details", 'String'>
    readonly department: FieldRef<"student_details", 'String'>
    readonly pass_year: FieldRef<"student_details", 'String'>
    readonly image: FieldRef<"student_details", 'String'>
    readonly domain: FieldRef<"student_details", 'String'>
    readonly college_name: FieldRef<"student_details", 'String'>
    readonly phone: FieldRef<"student_details", 'String'>
    readonly email: FieldRef<"student_details", 'String'>
    readonly city: FieldRef<"student_details", 'String'>
    readonly aoi: FieldRef<"student_details", 'String'>
    readonly alumni_interaction: FieldRef<"student_details", 'String'>
  }
    

  // Custom InputTypes
  /**
   * student_details findUnique
   */
  export type student_detailsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the student_details
     */
    select?: student_detailsSelect<ExtArgs> | null
    /**
     * Filter, which student_details to fetch.
     */
    where: student_detailsWhereUniqueInput
  }

  /**
   * student_details findUniqueOrThrow
   */
  export type student_detailsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the student_details
     */
    select?: student_detailsSelect<ExtArgs> | null
    /**
     * Filter, which student_details to fetch.
     */
    where: student_detailsWhereUniqueInput
  }

  /**
   * student_details findFirst
   */
  export type student_detailsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the student_details
     */
    select?: student_detailsSelect<ExtArgs> | null
    /**
     * Filter, which student_details to fetch.
     */
    where?: student_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of student_details to fetch.
     */
    orderBy?: student_detailsOrderByWithRelationInput | student_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for student_details.
     */
    cursor?: student_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` student_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` student_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of student_details.
     */
    distinct?: Student_detailsScalarFieldEnum | Student_detailsScalarFieldEnum[]
  }

  /**
   * student_details findFirstOrThrow
   */
  export type student_detailsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the student_details
     */
    select?: student_detailsSelect<ExtArgs> | null
    /**
     * Filter, which student_details to fetch.
     */
    where?: student_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of student_details to fetch.
     */
    orderBy?: student_detailsOrderByWithRelationInput | student_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for student_details.
     */
    cursor?: student_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` student_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` student_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of student_details.
     */
    distinct?: Student_detailsScalarFieldEnum | Student_detailsScalarFieldEnum[]
  }

  /**
   * student_details findMany
   */
  export type student_detailsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the student_details
     */
    select?: student_detailsSelect<ExtArgs> | null
    /**
     * Filter, which student_details to fetch.
     */
    where?: student_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of student_details to fetch.
     */
    orderBy?: student_detailsOrderByWithRelationInput | student_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing student_details.
     */
    cursor?: student_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` student_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` student_details.
     */
    skip?: number
    distinct?: Student_detailsScalarFieldEnum | Student_detailsScalarFieldEnum[]
  }

  /**
   * student_details create
   */
  export type student_detailsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the student_details
     */
    select?: student_detailsSelect<ExtArgs> | null
    /**
     * The data needed to create a student_details.
     */
    data: XOR<student_detailsCreateInput, student_detailsUncheckedCreateInput>
  }

  /**
   * student_details createMany
   */
  export type student_detailsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many student_details.
     */
    data: student_detailsCreateManyInput | student_detailsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * student_details update
   */
  export type student_detailsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the student_details
     */
    select?: student_detailsSelect<ExtArgs> | null
    /**
     * The data needed to update a student_details.
     */
    data: XOR<student_detailsUpdateInput, student_detailsUncheckedUpdateInput>
    /**
     * Choose, which student_details to update.
     */
    where: student_detailsWhereUniqueInput
  }

  /**
   * student_details updateMany
   */
  export type student_detailsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update student_details.
     */
    data: XOR<student_detailsUpdateManyMutationInput, student_detailsUncheckedUpdateManyInput>
    /**
     * Filter which student_details to update
     */
    where?: student_detailsWhereInput
  }

  /**
   * student_details upsert
   */
  export type student_detailsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the student_details
     */
    select?: student_detailsSelect<ExtArgs> | null
    /**
     * The filter to search for the student_details to update in case it exists.
     */
    where: student_detailsWhereUniqueInput
    /**
     * In case the student_details found by the `where` argument doesn't exist, create a new student_details with this data.
     */
    create: XOR<student_detailsCreateInput, student_detailsUncheckedCreateInput>
    /**
     * In case the student_details was found with the provided `where` argument, update it with this data.
     */
    update: XOR<student_detailsUpdateInput, student_detailsUncheckedUpdateInput>
  }

  /**
   * student_details delete
   */
  export type student_detailsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the student_details
     */
    select?: student_detailsSelect<ExtArgs> | null
    /**
     * Filter which student_details to delete.
     */
    where: student_detailsWhereUniqueInput
  }

  /**
   * student_details deleteMany
   */
  export type student_detailsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which student_details to delete
     */
    where?: student_detailsWhereInput
  }

  /**
   * student_details without action
   */
  export type student_detailsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the student_details
     */
    select?: student_detailsSelect<ExtArgs> | null
  }


  /**
   * Model student_staff_interaction
   */

  export type AggregateStudent_staff_interaction = {
    _count: Student_staff_interactionCountAggregateOutputType | null
    _avg: Student_staff_interactionAvgAggregateOutputType | null
    _sum: Student_staff_interactionSumAggregateOutputType | null
    _min: Student_staff_interactionMinAggregateOutputType | null
    _max: Student_staff_interactionMaxAggregateOutputType | null
  }

  export type Student_staff_interactionAvgAggregateOutputType = {
    uid: number | null
  }

  export type Student_staff_interactionSumAggregateOutputType = {
    uid: number | null
  }

  export type Student_staff_interactionMinAggregateOutputType = {
    uid: number | null
    name: string | null
    regno: string | null
    domain: string | null
    department: string | null
    pass_year: string | null
    regarding: string | null
    date: string | null
    time: string | null
    status: string | null
  }

  export type Student_staff_interactionMaxAggregateOutputType = {
    uid: number | null
    name: string | null
    regno: string | null
    domain: string | null
    department: string | null
    pass_year: string | null
    regarding: string | null
    date: string | null
    time: string | null
    status: string | null
  }

  export type Student_staff_interactionCountAggregateOutputType = {
    uid: number
    name: number
    regno: number
    domain: number
    department: number
    pass_year: number
    regarding: number
    date: number
    time: number
    status: number
    _all: number
  }


  export type Student_staff_interactionAvgAggregateInputType = {
    uid?: true
  }

  export type Student_staff_interactionSumAggregateInputType = {
    uid?: true
  }

  export type Student_staff_interactionMinAggregateInputType = {
    uid?: true
    name?: true
    regno?: true
    domain?: true
    department?: true
    pass_year?: true
    regarding?: true
    date?: true
    time?: true
    status?: true
  }

  export type Student_staff_interactionMaxAggregateInputType = {
    uid?: true
    name?: true
    regno?: true
    domain?: true
    department?: true
    pass_year?: true
    regarding?: true
    date?: true
    time?: true
    status?: true
  }

  export type Student_staff_interactionCountAggregateInputType = {
    uid?: true
    name?: true
    regno?: true
    domain?: true
    department?: true
    pass_year?: true
    regarding?: true
    date?: true
    time?: true
    status?: true
    _all?: true
  }

  export type Student_staff_interactionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which student_staff_interaction to aggregate.
     */
    where?: student_staff_interactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of student_staff_interactions to fetch.
     */
    orderBy?: student_staff_interactionOrderByWithRelationInput | student_staff_interactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: student_staff_interactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` student_staff_interactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` student_staff_interactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned student_staff_interactions
    **/
    _count?: true | Student_staff_interactionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Student_staff_interactionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Student_staff_interactionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Student_staff_interactionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Student_staff_interactionMaxAggregateInputType
  }

  export type GetStudent_staff_interactionAggregateType<T extends Student_staff_interactionAggregateArgs> = {
        [P in keyof T & keyof AggregateStudent_staff_interaction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStudent_staff_interaction[P]>
      : GetScalarType<T[P], AggregateStudent_staff_interaction[P]>
  }




  export type student_staff_interactionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: student_staff_interactionWhereInput
    orderBy?: student_staff_interactionOrderByWithAggregationInput | student_staff_interactionOrderByWithAggregationInput[]
    by: Student_staff_interactionScalarFieldEnum[] | Student_staff_interactionScalarFieldEnum
    having?: student_staff_interactionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Student_staff_interactionCountAggregateInputType | true
    _avg?: Student_staff_interactionAvgAggregateInputType
    _sum?: Student_staff_interactionSumAggregateInputType
    _min?: Student_staff_interactionMinAggregateInputType
    _max?: Student_staff_interactionMaxAggregateInputType
  }

  export type Student_staff_interactionGroupByOutputType = {
    uid: number
    name: string
    regno: string
    domain: string
    department: string
    pass_year: string
    regarding: string
    date: string
    time: string
    status: string
    _count: Student_staff_interactionCountAggregateOutputType | null
    _avg: Student_staff_interactionAvgAggregateOutputType | null
    _sum: Student_staff_interactionSumAggregateOutputType | null
    _min: Student_staff_interactionMinAggregateOutputType | null
    _max: Student_staff_interactionMaxAggregateOutputType | null
  }

  type GetStudent_staff_interactionGroupByPayload<T extends student_staff_interactionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Student_staff_interactionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Student_staff_interactionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Student_staff_interactionGroupByOutputType[P]>
            : GetScalarType<T[P], Student_staff_interactionGroupByOutputType[P]>
        }
      >
    >


  export type student_staff_interactionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uid?: boolean
    name?: boolean
    regno?: boolean
    domain?: boolean
    department?: boolean
    pass_year?: boolean
    regarding?: boolean
    date?: boolean
    time?: boolean
    status?: boolean
  }, ExtArgs["result"]["student_staff_interaction"]>

  export type student_staff_interactionSelectScalar = {
    uid?: boolean
    name?: boolean
    regno?: boolean
    domain?: boolean
    department?: boolean
    pass_year?: boolean
    regarding?: boolean
    date?: boolean
    time?: boolean
    status?: boolean
  }



  export type $student_staff_interactionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "student_staff_interaction"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      uid: number
      name: string
      regno: string
      domain: string
      department: string
      pass_year: string
      regarding: string
      date: string
      time: string
      status: string
    }, ExtArgs["result"]["student_staff_interaction"]>
    composites: {}
  }


  type student_staff_interactionGetPayload<S extends boolean | null | undefined | student_staff_interactionDefaultArgs> = $Result.GetResult<Prisma.$student_staff_interactionPayload, S>

  type student_staff_interactionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<student_staff_interactionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Student_staff_interactionCountAggregateInputType | true
    }

  export interface student_staff_interactionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['student_staff_interaction'], meta: { name: 'student_staff_interaction' } }
    /**
     * Find zero or one Student_staff_interaction that matches the filter.
     * @param {student_staff_interactionFindUniqueArgs} args - Arguments to find a Student_staff_interaction
     * @example
     * // Get one Student_staff_interaction
     * const student_staff_interaction = await prisma.student_staff_interaction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends student_staff_interactionFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, student_staff_interactionFindUniqueArgs<ExtArgs>>
    ): Prisma__student_staff_interactionClient<$Result.GetResult<Prisma.$student_staff_interactionPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Student_staff_interaction that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {student_staff_interactionFindUniqueOrThrowArgs} args - Arguments to find a Student_staff_interaction
     * @example
     * // Get one Student_staff_interaction
     * const student_staff_interaction = await prisma.student_staff_interaction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends student_staff_interactionFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, student_staff_interactionFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__student_staff_interactionClient<$Result.GetResult<Prisma.$student_staff_interactionPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Student_staff_interaction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {student_staff_interactionFindFirstArgs} args - Arguments to find a Student_staff_interaction
     * @example
     * // Get one Student_staff_interaction
     * const student_staff_interaction = await prisma.student_staff_interaction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends student_staff_interactionFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, student_staff_interactionFindFirstArgs<ExtArgs>>
    ): Prisma__student_staff_interactionClient<$Result.GetResult<Prisma.$student_staff_interactionPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Student_staff_interaction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {student_staff_interactionFindFirstOrThrowArgs} args - Arguments to find a Student_staff_interaction
     * @example
     * // Get one Student_staff_interaction
     * const student_staff_interaction = await prisma.student_staff_interaction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends student_staff_interactionFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, student_staff_interactionFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__student_staff_interactionClient<$Result.GetResult<Prisma.$student_staff_interactionPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Student_staff_interactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {student_staff_interactionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Student_staff_interactions
     * const student_staff_interactions = await prisma.student_staff_interaction.findMany()
     * 
     * // Get first 10 Student_staff_interactions
     * const student_staff_interactions = await prisma.student_staff_interaction.findMany({ take: 10 })
     * 
     * // Only select the `uid`
     * const student_staff_interactionWithUidOnly = await prisma.student_staff_interaction.findMany({ select: { uid: true } })
     * 
    **/
    findMany<T extends student_staff_interactionFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, student_staff_interactionFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$student_staff_interactionPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Student_staff_interaction.
     * @param {student_staff_interactionCreateArgs} args - Arguments to create a Student_staff_interaction.
     * @example
     * // Create one Student_staff_interaction
     * const Student_staff_interaction = await prisma.student_staff_interaction.create({
     *   data: {
     *     // ... data to create a Student_staff_interaction
     *   }
     * })
     * 
    **/
    create<T extends student_staff_interactionCreateArgs<ExtArgs>>(
      args: SelectSubset<T, student_staff_interactionCreateArgs<ExtArgs>>
    ): Prisma__student_staff_interactionClient<$Result.GetResult<Prisma.$student_staff_interactionPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Student_staff_interactions.
     * @param {student_staff_interactionCreateManyArgs} args - Arguments to create many Student_staff_interactions.
     * @example
     * // Create many Student_staff_interactions
     * const student_staff_interaction = await prisma.student_staff_interaction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends student_staff_interactionCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, student_staff_interactionCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Student_staff_interaction.
     * @param {student_staff_interactionDeleteArgs} args - Arguments to delete one Student_staff_interaction.
     * @example
     * // Delete one Student_staff_interaction
     * const Student_staff_interaction = await prisma.student_staff_interaction.delete({
     *   where: {
     *     // ... filter to delete one Student_staff_interaction
     *   }
     * })
     * 
    **/
    delete<T extends student_staff_interactionDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, student_staff_interactionDeleteArgs<ExtArgs>>
    ): Prisma__student_staff_interactionClient<$Result.GetResult<Prisma.$student_staff_interactionPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Student_staff_interaction.
     * @param {student_staff_interactionUpdateArgs} args - Arguments to update one Student_staff_interaction.
     * @example
     * // Update one Student_staff_interaction
     * const student_staff_interaction = await prisma.student_staff_interaction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends student_staff_interactionUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, student_staff_interactionUpdateArgs<ExtArgs>>
    ): Prisma__student_staff_interactionClient<$Result.GetResult<Prisma.$student_staff_interactionPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Student_staff_interactions.
     * @param {student_staff_interactionDeleteManyArgs} args - Arguments to filter Student_staff_interactions to delete.
     * @example
     * // Delete a few Student_staff_interactions
     * const { count } = await prisma.student_staff_interaction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends student_staff_interactionDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, student_staff_interactionDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Student_staff_interactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {student_staff_interactionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Student_staff_interactions
     * const student_staff_interaction = await prisma.student_staff_interaction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends student_staff_interactionUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, student_staff_interactionUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Student_staff_interaction.
     * @param {student_staff_interactionUpsertArgs} args - Arguments to update or create a Student_staff_interaction.
     * @example
     * // Update or create a Student_staff_interaction
     * const student_staff_interaction = await prisma.student_staff_interaction.upsert({
     *   create: {
     *     // ... data to create a Student_staff_interaction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Student_staff_interaction we want to update
     *   }
     * })
    **/
    upsert<T extends student_staff_interactionUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, student_staff_interactionUpsertArgs<ExtArgs>>
    ): Prisma__student_staff_interactionClient<$Result.GetResult<Prisma.$student_staff_interactionPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Student_staff_interactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {student_staff_interactionCountArgs} args - Arguments to filter Student_staff_interactions to count.
     * @example
     * // Count the number of Student_staff_interactions
     * const count = await prisma.student_staff_interaction.count({
     *   where: {
     *     // ... the filter for the Student_staff_interactions we want to count
     *   }
     * })
    **/
    count<T extends student_staff_interactionCountArgs>(
      args?: Subset<T, student_staff_interactionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Student_staff_interactionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Student_staff_interaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Student_staff_interactionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Student_staff_interactionAggregateArgs>(args: Subset<T, Student_staff_interactionAggregateArgs>): Prisma.PrismaPromise<GetStudent_staff_interactionAggregateType<T>>

    /**
     * Group by Student_staff_interaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {student_staff_interactionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends student_staff_interactionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: student_staff_interactionGroupByArgs['orderBy'] }
        : { orderBy?: student_staff_interactionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, student_staff_interactionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudent_staff_interactionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the student_staff_interaction model
   */
  readonly fields: student_staff_interactionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for student_staff_interaction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__student_staff_interactionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the student_staff_interaction model
   */ 
  interface student_staff_interactionFieldRefs {
    readonly uid: FieldRef<"student_staff_interaction", 'Int'>
    readonly name: FieldRef<"student_staff_interaction", 'String'>
    readonly regno: FieldRef<"student_staff_interaction", 'String'>
    readonly domain: FieldRef<"student_staff_interaction", 'String'>
    readonly department: FieldRef<"student_staff_interaction", 'String'>
    readonly pass_year: FieldRef<"student_staff_interaction", 'String'>
    readonly regarding: FieldRef<"student_staff_interaction", 'String'>
    readonly date: FieldRef<"student_staff_interaction", 'String'>
    readonly time: FieldRef<"student_staff_interaction", 'String'>
    readonly status: FieldRef<"student_staff_interaction", 'String'>
  }
    

  // Custom InputTypes
  /**
   * student_staff_interaction findUnique
   */
  export type student_staff_interactionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the student_staff_interaction
     */
    select?: student_staff_interactionSelect<ExtArgs> | null
    /**
     * Filter, which student_staff_interaction to fetch.
     */
    where: student_staff_interactionWhereUniqueInput
  }

  /**
   * student_staff_interaction findUniqueOrThrow
   */
  export type student_staff_interactionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the student_staff_interaction
     */
    select?: student_staff_interactionSelect<ExtArgs> | null
    /**
     * Filter, which student_staff_interaction to fetch.
     */
    where: student_staff_interactionWhereUniqueInput
  }

  /**
   * student_staff_interaction findFirst
   */
  export type student_staff_interactionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the student_staff_interaction
     */
    select?: student_staff_interactionSelect<ExtArgs> | null
    /**
     * Filter, which student_staff_interaction to fetch.
     */
    where?: student_staff_interactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of student_staff_interactions to fetch.
     */
    orderBy?: student_staff_interactionOrderByWithRelationInput | student_staff_interactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for student_staff_interactions.
     */
    cursor?: student_staff_interactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` student_staff_interactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` student_staff_interactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of student_staff_interactions.
     */
    distinct?: Student_staff_interactionScalarFieldEnum | Student_staff_interactionScalarFieldEnum[]
  }

  /**
   * student_staff_interaction findFirstOrThrow
   */
  export type student_staff_interactionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the student_staff_interaction
     */
    select?: student_staff_interactionSelect<ExtArgs> | null
    /**
     * Filter, which student_staff_interaction to fetch.
     */
    where?: student_staff_interactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of student_staff_interactions to fetch.
     */
    orderBy?: student_staff_interactionOrderByWithRelationInput | student_staff_interactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for student_staff_interactions.
     */
    cursor?: student_staff_interactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` student_staff_interactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` student_staff_interactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of student_staff_interactions.
     */
    distinct?: Student_staff_interactionScalarFieldEnum | Student_staff_interactionScalarFieldEnum[]
  }

  /**
   * student_staff_interaction findMany
   */
  export type student_staff_interactionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the student_staff_interaction
     */
    select?: student_staff_interactionSelect<ExtArgs> | null
    /**
     * Filter, which student_staff_interactions to fetch.
     */
    where?: student_staff_interactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of student_staff_interactions to fetch.
     */
    orderBy?: student_staff_interactionOrderByWithRelationInput | student_staff_interactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing student_staff_interactions.
     */
    cursor?: student_staff_interactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` student_staff_interactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` student_staff_interactions.
     */
    skip?: number
    distinct?: Student_staff_interactionScalarFieldEnum | Student_staff_interactionScalarFieldEnum[]
  }

  /**
   * student_staff_interaction create
   */
  export type student_staff_interactionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the student_staff_interaction
     */
    select?: student_staff_interactionSelect<ExtArgs> | null
    /**
     * The data needed to create a student_staff_interaction.
     */
    data: XOR<student_staff_interactionCreateInput, student_staff_interactionUncheckedCreateInput>
  }

  /**
   * student_staff_interaction createMany
   */
  export type student_staff_interactionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many student_staff_interactions.
     */
    data: student_staff_interactionCreateManyInput | student_staff_interactionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * student_staff_interaction update
   */
  export type student_staff_interactionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the student_staff_interaction
     */
    select?: student_staff_interactionSelect<ExtArgs> | null
    /**
     * The data needed to update a student_staff_interaction.
     */
    data: XOR<student_staff_interactionUpdateInput, student_staff_interactionUncheckedUpdateInput>
    /**
     * Choose, which student_staff_interaction to update.
     */
    where: student_staff_interactionWhereUniqueInput
  }

  /**
   * student_staff_interaction updateMany
   */
  export type student_staff_interactionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update student_staff_interactions.
     */
    data: XOR<student_staff_interactionUpdateManyMutationInput, student_staff_interactionUncheckedUpdateManyInput>
    /**
     * Filter which student_staff_interactions to update
     */
    where?: student_staff_interactionWhereInput
  }

  /**
   * student_staff_interaction upsert
   */
  export type student_staff_interactionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the student_staff_interaction
     */
    select?: student_staff_interactionSelect<ExtArgs> | null
    /**
     * The filter to search for the student_staff_interaction to update in case it exists.
     */
    where: student_staff_interactionWhereUniqueInput
    /**
     * In case the student_staff_interaction found by the `where` argument doesn't exist, create a new student_staff_interaction with this data.
     */
    create: XOR<student_staff_interactionCreateInput, student_staff_interactionUncheckedCreateInput>
    /**
     * In case the student_staff_interaction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<student_staff_interactionUpdateInput, student_staff_interactionUncheckedUpdateInput>
  }

  /**
   * student_staff_interaction delete
   */
  export type student_staff_interactionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the student_staff_interaction
     */
    select?: student_staff_interactionSelect<ExtArgs> | null
    /**
     * Filter which student_staff_interaction to delete.
     */
    where: student_staff_interactionWhereUniqueInput
  }

  /**
   * student_staff_interaction deleteMany
   */
  export type student_staff_interactionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which student_staff_interactions to delete
     */
    where?: student_staff_interactionWhereInput
  }

  /**
   * student_staff_interaction without action
   */
  export type student_staff_interactionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the student_staff_interaction
     */
    select?: student_staff_interactionSelect<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Alumni_detailsScalarFieldEnum: {
    uid: 'uid',
    name: 'name',
    regno: 'regno',
    department: 'department',
    phone: 'phone',
    email: 'email',
    image: 'image',
    domain: 'domain',
    company: 'company',
    city: 'city',
    pass_year: 'pass_year'
  };

  export type Alumni_detailsScalarFieldEnum = (typeof Alumni_detailsScalarFieldEnum)[keyof typeof Alumni_detailsScalarFieldEnum]


  export const Alumni_interaction_programScalarFieldEnum: {
    uid: 'uid',
    alumni_name: 'alumni_name',
    department: 'department',
    date: 'date',
    time: 'time',
    venue: 'venue',
    title: 'title',
    email: 'email'
  };

  export type Alumni_interaction_programScalarFieldEnum = (typeof Alumni_interaction_programScalarFieldEnum)[keyof typeof Alumni_interaction_programScalarFieldEnum]


  export const Staff_detailsScalarFieldEnum: {
    uid: 'uid',
    name: 'name',
    department: 'department',
    id: 'id',
    phone: 'phone',
    email: 'email',
    image: 'image',
    domain: 'domain',
    doj: 'doj',
    college_name: 'college_name',
    description: 'description',
    experience: 'experience'
  };

  export type Staff_detailsScalarFieldEnum = (typeof Staff_detailsScalarFieldEnum)[keyof typeof Staff_detailsScalarFieldEnum]


  export const Student_detailsScalarFieldEnum: {
    uid: 'uid',
    name: 'name',
    regno: 'regno',
    department: 'department',
    pass_year: 'pass_year',
    image: 'image',
    domain: 'domain',
    college_name: 'college_name',
    phone: 'phone',
    email: 'email',
    city: 'city',
    aoi: 'aoi',
    alumni_interaction: 'alumni_interaction'
  };

  export type Student_detailsScalarFieldEnum = (typeof Student_detailsScalarFieldEnum)[keyof typeof Student_detailsScalarFieldEnum]


  export const Student_staff_interactionScalarFieldEnum: {
    uid: 'uid',
    name: 'name',
    regno: 'regno',
    domain: 'domain',
    department: 'department',
    pass_year: 'pass_year',
    regarding: 'regarding',
    date: 'date',
    time: 'time',
    status: 'status'
  };

  export type Student_staff_interactionScalarFieldEnum = (typeof Student_staff_interactionScalarFieldEnum)[keyof typeof Student_staff_interactionScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type alumni_detailsWhereInput = {
    AND?: alumni_detailsWhereInput | alumni_detailsWhereInput[]
    OR?: alumni_detailsWhereInput[]
    NOT?: alumni_detailsWhereInput | alumni_detailsWhereInput[]
    uid?: IntFilter<"alumni_details"> | number
    name?: StringFilter<"alumni_details"> | string
    regno?: StringFilter<"alumni_details"> | string
    department?: StringFilter<"alumni_details"> | string
    phone?: StringFilter<"alumni_details"> | string
    email?: StringFilter<"alumni_details"> | string
    image?: StringFilter<"alumni_details"> | string
    domain?: StringFilter<"alumni_details"> | string
    company?: StringFilter<"alumni_details"> | string
    city?: StringFilter<"alumni_details"> | string
    pass_year?: StringFilter<"alumni_details"> | string
  }

  export type alumni_detailsOrderByWithRelationInput = {
    uid?: SortOrder
    name?: SortOrder
    regno?: SortOrder
    department?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    image?: SortOrder
    domain?: SortOrder
    company?: SortOrder
    city?: SortOrder
    pass_year?: SortOrder
  }

  export type alumni_detailsWhereUniqueInput = Prisma.AtLeast<{
    uid?: number
    AND?: alumni_detailsWhereInput | alumni_detailsWhereInput[]
    OR?: alumni_detailsWhereInput[]
    NOT?: alumni_detailsWhereInput | alumni_detailsWhereInput[]
    name?: StringFilter<"alumni_details"> | string
    regno?: StringFilter<"alumni_details"> | string
    department?: StringFilter<"alumni_details"> | string
    phone?: StringFilter<"alumni_details"> | string
    email?: StringFilter<"alumni_details"> | string
    image?: StringFilter<"alumni_details"> | string
    domain?: StringFilter<"alumni_details"> | string
    company?: StringFilter<"alumni_details"> | string
    city?: StringFilter<"alumni_details"> | string
    pass_year?: StringFilter<"alumni_details"> | string
  }, "uid">

  export type alumni_detailsOrderByWithAggregationInput = {
    uid?: SortOrder
    name?: SortOrder
    regno?: SortOrder
    department?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    image?: SortOrder
    domain?: SortOrder
    company?: SortOrder
    city?: SortOrder
    pass_year?: SortOrder
    _count?: alumni_detailsCountOrderByAggregateInput
    _avg?: alumni_detailsAvgOrderByAggregateInput
    _max?: alumni_detailsMaxOrderByAggregateInput
    _min?: alumni_detailsMinOrderByAggregateInput
    _sum?: alumni_detailsSumOrderByAggregateInput
  }

  export type alumni_detailsScalarWhereWithAggregatesInput = {
    AND?: alumni_detailsScalarWhereWithAggregatesInput | alumni_detailsScalarWhereWithAggregatesInput[]
    OR?: alumni_detailsScalarWhereWithAggregatesInput[]
    NOT?: alumni_detailsScalarWhereWithAggregatesInput | alumni_detailsScalarWhereWithAggregatesInput[]
    uid?: IntWithAggregatesFilter<"alumni_details"> | number
    name?: StringWithAggregatesFilter<"alumni_details"> | string
    regno?: StringWithAggregatesFilter<"alumni_details"> | string
    department?: StringWithAggregatesFilter<"alumni_details"> | string
    phone?: StringWithAggregatesFilter<"alumni_details"> | string
    email?: StringWithAggregatesFilter<"alumni_details"> | string
    image?: StringWithAggregatesFilter<"alumni_details"> | string
    domain?: StringWithAggregatesFilter<"alumni_details"> | string
    company?: StringWithAggregatesFilter<"alumni_details"> | string
    city?: StringWithAggregatesFilter<"alumni_details"> | string
    pass_year?: StringWithAggregatesFilter<"alumni_details"> | string
  }

  export type alumni_interaction_programWhereInput = {
    AND?: alumni_interaction_programWhereInput | alumni_interaction_programWhereInput[]
    OR?: alumni_interaction_programWhereInput[]
    NOT?: alumni_interaction_programWhereInput | alumni_interaction_programWhereInput[]
    uid?: IntFilter<"alumni_interaction_program"> | number
    alumni_name?: StringFilter<"alumni_interaction_program"> | string
    department?: StringFilter<"alumni_interaction_program"> | string
    date?: StringFilter<"alumni_interaction_program"> | string
    time?: StringFilter<"alumni_interaction_program"> | string
    venue?: StringFilter<"alumni_interaction_program"> | string
    title?: StringFilter<"alumni_interaction_program"> | string
    email?: StringFilter<"alumni_interaction_program"> | string
  }

  export type alumni_interaction_programOrderByWithRelationInput = {
    uid?: SortOrder
    alumni_name?: SortOrder
    department?: SortOrder
    date?: SortOrder
    time?: SortOrder
    venue?: SortOrder
    title?: SortOrder
    email?: SortOrder
  }

  export type alumni_interaction_programWhereUniqueInput = Prisma.AtLeast<{
    uid?: number
    AND?: alumni_interaction_programWhereInput | alumni_interaction_programWhereInput[]
    OR?: alumni_interaction_programWhereInput[]
    NOT?: alumni_interaction_programWhereInput | alumni_interaction_programWhereInput[]
    alumni_name?: StringFilter<"alumni_interaction_program"> | string
    department?: StringFilter<"alumni_interaction_program"> | string
    date?: StringFilter<"alumni_interaction_program"> | string
    time?: StringFilter<"alumni_interaction_program"> | string
    venue?: StringFilter<"alumni_interaction_program"> | string
    title?: StringFilter<"alumni_interaction_program"> | string
    email?: StringFilter<"alumni_interaction_program"> | string
  }, "uid">

  export type alumni_interaction_programOrderByWithAggregationInput = {
    uid?: SortOrder
    alumni_name?: SortOrder
    department?: SortOrder
    date?: SortOrder
    time?: SortOrder
    venue?: SortOrder
    title?: SortOrder
    email?: SortOrder
    _count?: alumni_interaction_programCountOrderByAggregateInput
    _avg?: alumni_interaction_programAvgOrderByAggregateInput
    _max?: alumni_interaction_programMaxOrderByAggregateInput
    _min?: alumni_interaction_programMinOrderByAggregateInput
    _sum?: alumni_interaction_programSumOrderByAggregateInput
  }

  export type alumni_interaction_programScalarWhereWithAggregatesInput = {
    AND?: alumni_interaction_programScalarWhereWithAggregatesInput | alumni_interaction_programScalarWhereWithAggregatesInput[]
    OR?: alumni_interaction_programScalarWhereWithAggregatesInput[]
    NOT?: alumni_interaction_programScalarWhereWithAggregatesInput | alumni_interaction_programScalarWhereWithAggregatesInput[]
    uid?: IntWithAggregatesFilter<"alumni_interaction_program"> | number
    alumni_name?: StringWithAggregatesFilter<"alumni_interaction_program"> | string
    department?: StringWithAggregatesFilter<"alumni_interaction_program"> | string
    date?: StringWithAggregatesFilter<"alumni_interaction_program"> | string
    time?: StringWithAggregatesFilter<"alumni_interaction_program"> | string
    venue?: StringWithAggregatesFilter<"alumni_interaction_program"> | string
    title?: StringWithAggregatesFilter<"alumni_interaction_program"> | string
    email?: StringWithAggregatesFilter<"alumni_interaction_program"> | string
  }

  export type staff_detailsWhereInput = {
    AND?: staff_detailsWhereInput | staff_detailsWhereInput[]
    OR?: staff_detailsWhereInput[]
    NOT?: staff_detailsWhereInput | staff_detailsWhereInput[]
    uid?: IntFilter<"staff_details"> | number
    name?: StringFilter<"staff_details"> | string
    department?: StringFilter<"staff_details"> | string
    id?: StringFilter<"staff_details"> | string
    phone?: StringFilter<"staff_details"> | string
    email?: StringFilter<"staff_details"> | string
    image?: StringFilter<"staff_details"> | string
    domain?: StringFilter<"staff_details"> | string
    doj?: StringFilter<"staff_details"> | string
    college_name?: StringFilter<"staff_details"> | string
    description?: StringNullableFilter<"staff_details"> | string | null
    experience?: StringFilter<"staff_details"> | string
  }

  export type staff_detailsOrderByWithRelationInput = {
    uid?: SortOrder
    name?: SortOrder
    department?: SortOrder
    id?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    image?: SortOrder
    domain?: SortOrder
    doj?: SortOrder
    college_name?: SortOrder
    description?: SortOrderInput | SortOrder
    experience?: SortOrder
  }

  export type staff_detailsWhereUniqueInput = Prisma.AtLeast<{
    uid_id?: staff_detailsUidIdCompoundUniqueInput
    AND?: staff_detailsWhereInput | staff_detailsWhereInput[]
    OR?: staff_detailsWhereInput[]
    NOT?: staff_detailsWhereInput | staff_detailsWhereInput[]
    uid?: IntFilter<"staff_details"> | number
    name?: StringFilter<"staff_details"> | string
    department?: StringFilter<"staff_details"> | string
    id?: StringFilter<"staff_details"> | string
    phone?: StringFilter<"staff_details"> | string
    email?: StringFilter<"staff_details"> | string
    image?: StringFilter<"staff_details"> | string
    domain?: StringFilter<"staff_details"> | string
    doj?: StringFilter<"staff_details"> | string
    college_name?: StringFilter<"staff_details"> | string
    description?: StringNullableFilter<"staff_details"> | string | null
    experience?: StringFilter<"staff_details"> | string
  }, "uid_id">

  export type staff_detailsOrderByWithAggregationInput = {
    uid?: SortOrder
    name?: SortOrder
    department?: SortOrder
    id?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    image?: SortOrder
    domain?: SortOrder
    doj?: SortOrder
    college_name?: SortOrder
    description?: SortOrderInput | SortOrder
    experience?: SortOrder
    _count?: staff_detailsCountOrderByAggregateInput
    _avg?: staff_detailsAvgOrderByAggregateInput
    _max?: staff_detailsMaxOrderByAggregateInput
    _min?: staff_detailsMinOrderByAggregateInput
    _sum?: staff_detailsSumOrderByAggregateInput
  }

  export type staff_detailsScalarWhereWithAggregatesInput = {
    AND?: staff_detailsScalarWhereWithAggregatesInput | staff_detailsScalarWhereWithAggregatesInput[]
    OR?: staff_detailsScalarWhereWithAggregatesInput[]
    NOT?: staff_detailsScalarWhereWithAggregatesInput | staff_detailsScalarWhereWithAggregatesInput[]
    uid?: IntWithAggregatesFilter<"staff_details"> | number
    name?: StringWithAggregatesFilter<"staff_details"> | string
    department?: StringWithAggregatesFilter<"staff_details"> | string
    id?: StringWithAggregatesFilter<"staff_details"> | string
    phone?: StringWithAggregatesFilter<"staff_details"> | string
    email?: StringWithAggregatesFilter<"staff_details"> | string
    image?: StringWithAggregatesFilter<"staff_details"> | string
    domain?: StringWithAggregatesFilter<"staff_details"> | string
    doj?: StringWithAggregatesFilter<"staff_details"> | string
    college_name?: StringWithAggregatesFilter<"staff_details"> | string
    description?: StringNullableWithAggregatesFilter<"staff_details"> | string | null
    experience?: StringWithAggregatesFilter<"staff_details"> | string
  }

  export type student_detailsWhereInput = {
    AND?: student_detailsWhereInput | student_detailsWhereInput[]
    OR?: student_detailsWhereInput[]
    NOT?: student_detailsWhereInput | student_detailsWhereInput[]
    uid?: IntFilter<"student_details"> | number
    name?: StringFilter<"student_details"> | string
    regno?: StringFilter<"student_details"> | string
    department?: StringFilter<"student_details"> | string
    pass_year?: StringFilter<"student_details"> | string
    image?: StringFilter<"student_details"> | string
    domain?: StringFilter<"student_details"> | string
    college_name?: StringFilter<"student_details"> | string
    phone?: StringFilter<"student_details"> | string
    email?: StringFilter<"student_details"> | string
    city?: StringFilter<"student_details"> | string
    aoi?: StringFilter<"student_details"> | string
    alumni_interaction?: StringFilter<"student_details"> | string
  }

  export type student_detailsOrderByWithRelationInput = {
    uid?: SortOrder
    name?: SortOrder
    regno?: SortOrder
    department?: SortOrder
    pass_year?: SortOrder
    image?: SortOrder
    domain?: SortOrder
    college_name?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    city?: SortOrder
    aoi?: SortOrder
    alumni_interaction?: SortOrder
  }

  export type student_detailsWhereUniqueInput = Prisma.AtLeast<{
    uid_regno?: student_detailsUidRegnoCompoundUniqueInput
    AND?: student_detailsWhereInput | student_detailsWhereInput[]
    OR?: student_detailsWhereInput[]
    NOT?: student_detailsWhereInput | student_detailsWhereInput[]
    uid?: IntFilter<"student_details"> | number
    name?: StringFilter<"student_details"> | string
    regno?: StringFilter<"student_details"> | string
    department?: StringFilter<"student_details"> | string
    pass_year?: StringFilter<"student_details"> | string
    image?: StringFilter<"student_details"> | string
    domain?: StringFilter<"student_details"> | string
    college_name?: StringFilter<"student_details"> | string
    phone?: StringFilter<"student_details"> | string
    email?: StringFilter<"student_details"> | string
    city?: StringFilter<"student_details"> | string
    aoi?: StringFilter<"student_details"> | string
    alumni_interaction?: StringFilter<"student_details"> | string
  }, "uid_regno">

  export type student_detailsOrderByWithAggregationInput = {
    uid?: SortOrder
    name?: SortOrder
    regno?: SortOrder
    department?: SortOrder
    pass_year?: SortOrder
    image?: SortOrder
    domain?: SortOrder
    college_name?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    city?: SortOrder
    aoi?: SortOrder
    alumni_interaction?: SortOrder
    _count?: student_detailsCountOrderByAggregateInput
    _avg?: student_detailsAvgOrderByAggregateInput
    _max?: student_detailsMaxOrderByAggregateInput
    _min?: student_detailsMinOrderByAggregateInput
    _sum?: student_detailsSumOrderByAggregateInput
  }

  export type student_detailsScalarWhereWithAggregatesInput = {
    AND?: student_detailsScalarWhereWithAggregatesInput | student_detailsScalarWhereWithAggregatesInput[]
    OR?: student_detailsScalarWhereWithAggregatesInput[]
    NOT?: student_detailsScalarWhereWithAggregatesInput | student_detailsScalarWhereWithAggregatesInput[]
    uid?: IntWithAggregatesFilter<"student_details"> | number
    name?: StringWithAggregatesFilter<"student_details"> | string
    regno?: StringWithAggregatesFilter<"student_details"> | string
    department?: StringWithAggregatesFilter<"student_details"> | string
    pass_year?: StringWithAggregatesFilter<"student_details"> | string
    image?: StringWithAggregatesFilter<"student_details"> | string
    domain?: StringWithAggregatesFilter<"student_details"> | string
    college_name?: StringWithAggregatesFilter<"student_details"> | string
    phone?: StringWithAggregatesFilter<"student_details"> | string
    email?: StringWithAggregatesFilter<"student_details"> | string
    city?: StringWithAggregatesFilter<"student_details"> | string
    aoi?: StringWithAggregatesFilter<"student_details"> | string
    alumni_interaction?: StringWithAggregatesFilter<"student_details"> | string
  }

  export type student_staff_interactionWhereInput = {
    AND?: student_staff_interactionWhereInput | student_staff_interactionWhereInput[]
    OR?: student_staff_interactionWhereInput[]
    NOT?: student_staff_interactionWhereInput | student_staff_interactionWhereInput[]
    uid?: IntFilter<"student_staff_interaction"> | number
    name?: StringFilter<"student_staff_interaction"> | string
    regno?: StringFilter<"student_staff_interaction"> | string
    domain?: StringFilter<"student_staff_interaction"> | string
    department?: StringFilter<"student_staff_interaction"> | string
    pass_year?: StringFilter<"student_staff_interaction"> | string
    regarding?: StringFilter<"student_staff_interaction"> | string
    date?: StringFilter<"student_staff_interaction"> | string
    time?: StringFilter<"student_staff_interaction"> | string
    status?: StringFilter<"student_staff_interaction"> | string
  }

  export type student_staff_interactionOrderByWithRelationInput = {
    uid?: SortOrder
    name?: SortOrder
    regno?: SortOrder
    domain?: SortOrder
    department?: SortOrder
    pass_year?: SortOrder
    regarding?: SortOrder
    date?: SortOrder
    time?: SortOrder
    status?: SortOrder
  }

  export type student_staff_interactionWhereUniqueInput = Prisma.AtLeast<{
    uid?: number
    AND?: student_staff_interactionWhereInput | student_staff_interactionWhereInput[]
    OR?: student_staff_interactionWhereInput[]
    NOT?: student_staff_interactionWhereInput | student_staff_interactionWhereInput[]
    name?: StringFilter<"student_staff_interaction"> | string
    regno?: StringFilter<"student_staff_interaction"> | string
    domain?: StringFilter<"student_staff_interaction"> | string
    department?: StringFilter<"student_staff_interaction"> | string
    pass_year?: StringFilter<"student_staff_interaction"> | string
    regarding?: StringFilter<"student_staff_interaction"> | string
    date?: StringFilter<"student_staff_interaction"> | string
    time?: StringFilter<"student_staff_interaction"> | string
    status?: StringFilter<"student_staff_interaction"> | string
  }, "uid">

  export type student_staff_interactionOrderByWithAggregationInput = {
    uid?: SortOrder
    name?: SortOrder
    regno?: SortOrder
    domain?: SortOrder
    department?: SortOrder
    pass_year?: SortOrder
    regarding?: SortOrder
    date?: SortOrder
    time?: SortOrder
    status?: SortOrder
    _count?: student_staff_interactionCountOrderByAggregateInput
    _avg?: student_staff_interactionAvgOrderByAggregateInput
    _max?: student_staff_interactionMaxOrderByAggregateInput
    _min?: student_staff_interactionMinOrderByAggregateInput
    _sum?: student_staff_interactionSumOrderByAggregateInput
  }

  export type student_staff_interactionScalarWhereWithAggregatesInput = {
    AND?: student_staff_interactionScalarWhereWithAggregatesInput | student_staff_interactionScalarWhereWithAggregatesInput[]
    OR?: student_staff_interactionScalarWhereWithAggregatesInput[]
    NOT?: student_staff_interactionScalarWhereWithAggregatesInput | student_staff_interactionScalarWhereWithAggregatesInput[]
    uid?: IntWithAggregatesFilter<"student_staff_interaction"> | number
    name?: StringWithAggregatesFilter<"student_staff_interaction"> | string
    regno?: StringWithAggregatesFilter<"student_staff_interaction"> | string
    domain?: StringWithAggregatesFilter<"student_staff_interaction"> | string
    department?: StringWithAggregatesFilter<"student_staff_interaction"> | string
    pass_year?: StringWithAggregatesFilter<"student_staff_interaction"> | string
    regarding?: StringWithAggregatesFilter<"student_staff_interaction"> | string
    date?: StringWithAggregatesFilter<"student_staff_interaction"> | string
    time?: StringWithAggregatesFilter<"student_staff_interaction"> | string
    status?: StringWithAggregatesFilter<"student_staff_interaction"> | string
  }

  export type alumni_detailsCreateInput = {
    name: string
    regno: string
    department: string
    phone: string
    email: string
    image: string
    domain: string
    company: string
    city: string
    pass_year: string
  }

  export type alumni_detailsUncheckedCreateInput = {
    uid?: number
    name: string
    regno: string
    department: string
    phone: string
    email: string
    image: string
    domain: string
    company: string
    city: string
    pass_year: string
  }

  export type alumni_detailsUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    regno?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    company?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    pass_year?: StringFieldUpdateOperationsInput | string
  }

  export type alumni_detailsUncheckedUpdateInput = {
    uid?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    regno?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    company?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    pass_year?: StringFieldUpdateOperationsInput | string
  }

  export type alumni_detailsCreateManyInput = {
    uid?: number
    name: string
    regno: string
    department: string
    phone: string
    email: string
    image: string
    domain: string
    company: string
    city: string
    pass_year: string
  }

  export type alumni_detailsUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    regno?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    company?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    pass_year?: StringFieldUpdateOperationsInput | string
  }

  export type alumni_detailsUncheckedUpdateManyInput = {
    uid?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    regno?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    company?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    pass_year?: StringFieldUpdateOperationsInput | string
  }

  export type alumni_interaction_programCreateInput = {
    alumni_name: string
    department: string
    date: string
    time: string
    venue: string
    title: string
    email: string
  }

  export type alumni_interaction_programUncheckedCreateInput = {
    uid?: number
    alumni_name: string
    department: string
    date: string
    time: string
    venue: string
    title: string
    email: string
  }

  export type alumni_interaction_programUpdateInput = {
    alumni_name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    time?: StringFieldUpdateOperationsInput | string
    venue?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
  }

  export type alumni_interaction_programUncheckedUpdateInput = {
    uid?: IntFieldUpdateOperationsInput | number
    alumni_name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    time?: StringFieldUpdateOperationsInput | string
    venue?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
  }

  export type alumni_interaction_programCreateManyInput = {
    uid?: number
    alumni_name: string
    department: string
    date: string
    time: string
    venue: string
    title: string
    email: string
  }

  export type alumni_interaction_programUpdateManyMutationInput = {
    alumni_name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    time?: StringFieldUpdateOperationsInput | string
    venue?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
  }

  export type alumni_interaction_programUncheckedUpdateManyInput = {
    uid?: IntFieldUpdateOperationsInput | number
    alumni_name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    time?: StringFieldUpdateOperationsInput | string
    venue?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
  }

  export type staff_detailsCreateInput = {
    uid?: number
    name: string
    department: string
    id: string
    phone: string
    email: string
    image: string
    domain: string
    doj: string
    college_name: string
    description?: string | null
    experience: string
  }

  export type staff_detailsUncheckedCreateInput = {
    uid?: number
    name: string
    department: string
    id: string
    phone: string
    email: string
    image: string
    domain: string
    doj: string
    college_name: string
    description?: string | null
    experience: string
  }

  export type staff_detailsUpdateInput = {
    uid?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    doj?: StringFieldUpdateOperationsInput | string
    college_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: StringFieldUpdateOperationsInput | string
  }

  export type staff_detailsUncheckedUpdateInput = {
    uid?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    doj?: StringFieldUpdateOperationsInput | string
    college_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: StringFieldUpdateOperationsInput | string
  }

  export type staff_detailsCreateManyInput = {
    uid?: number
    name: string
    department: string
    id: string
    phone: string
    email: string
    image: string
    domain: string
    doj: string
    college_name: string
    description?: string | null
    experience: string
  }

  export type staff_detailsUpdateManyMutationInput = {
    uid?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    doj?: StringFieldUpdateOperationsInput | string
    college_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: StringFieldUpdateOperationsInput | string
  }

  export type staff_detailsUncheckedUpdateManyInput = {
    uid?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    doj?: StringFieldUpdateOperationsInput | string
    college_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    experience?: StringFieldUpdateOperationsInput | string
  }

  export type student_detailsCreateInput = {
    uid?: number
    name: string
    regno: string
    department: string
    pass_year: string
    image: string
    domain: string
    college_name: string
    phone: string
    email: string
    city: string
    aoi: string
    alumni_interaction: string
  }

  export type student_detailsUncheckedCreateInput = {
    uid?: number
    name: string
    regno: string
    department: string
    pass_year: string
    image: string
    domain: string
    college_name: string
    phone: string
    email: string
    city: string
    aoi: string
    alumni_interaction: string
  }

  export type student_detailsUpdateInput = {
    uid?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    regno?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    pass_year?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    college_name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    aoi?: StringFieldUpdateOperationsInput | string
    alumni_interaction?: StringFieldUpdateOperationsInput | string
  }

  export type student_detailsUncheckedUpdateInput = {
    uid?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    regno?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    pass_year?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    college_name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    aoi?: StringFieldUpdateOperationsInput | string
    alumni_interaction?: StringFieldUpdateOperationsInput | string
  }

  export type student_detailsCreateManyInput = {
    uid?: number
    name: string
    regno: string
    department: string
    pass_year: string
    image: string
    domain: string
    college_name: string
    phone: string
    email: string
    city: string
    aoi: string
    alumni_interaction: string
  }

  export type student_detailsUpdateManyMutationInput = {
    uid?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    regno?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    pass_year?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    college_name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    aoi?: StringFieldUpdateOperationsInput | string
    alumni_interaction?: StringFieldUpdateOperationsInput | string
  }

  export type student_detailsUncheckedUpdateManyInput = {
    uid?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    regno?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    pass_year?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    college_name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    aoi?: StringFieldUpdateOperationsInput | string
    alumni_interaction?: StringFieldUpdateOperationsInput | string
  }

  export type student_staff_interactionCreateInput = {
    name: string
    regno: string
    domain: string
    department: string
    pass_year: string
    regarding: string
    date: string
    time: string
    status?: string
  }

  export type student_staff_interactionUncheckedCreateInput = {
    uid?: number
    name: string
    regno: string
    domain: string
    department: string
    pass_year: string
    regarding: string
    date: string
    time: string
    status?: string
  }

  export type student_staff_interactionUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    regno?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    pass_year?: StringFieldUpdateOperationsInput | string
    regarding?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    time?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
  }

  export type student_staff_interactionUncheckedUpdateInput = {
    uid?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    regno?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    pass_year?: StringFieldUpdateOperationsInput | string
    regarding?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    time?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
  }

  export type student_staff_interactionCreateManyInput = {
    uid?: number
    name: string
    regno: string
    domain: string
    department: string
    pass_year: string
    regarding: string
    date: string
    time: string
    status?: string
  }

  export type student_staff_interactionUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    regno?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    pass_year?: StringFieldUpdateOperationsInput | string
    regarding?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    time?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
  }

  export type student_staff_interactionUncheckedUpdateManyInput = {
    uid?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    regno?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    pass_year?: StringFieldUpdateOperationsInput | string
    regarding?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    time?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type alumni_detailsCountOrderByAggregateInput = {
    uid?: SortOrder
    name?: SortOrder
    regno?: SortOrder
    department?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    image?: SortOrder
    domain?: SortOrder
    company?: SortOrder
    city?: SortOrder
    pass_year?: SortOrder
  }

  export type alumni_detailsAvgOrderByAggregateInput = {
    uid?: SortOrder
  }

  export type alumni_detailsMaxOrderByAggregateInput = {
    uid?: SortOrder
    name?: SortOrder
    regno?: SortOrder
    department?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    image?: SortOrder
    domain?: SortOrder
    company?: SortOrder
    city?: SortOrder
    pass_year?: SortOrder
  }

  export type alumni_detailsMinOrderByAggregateInput = {
    uid?: SortOrder
    name?: SortOrder
    regno?: SortOrder
    department?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    image?: SortOrder
    domain?: SortOrder
    company?: SortOrder
    city?: SortOrder
    pass_year?: SortOrder
  }

  export type alumni_detailsSumOrderByAggregateInput = {
    uid?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type alumni_interaction_programCountOrderByAggregateInput = {
    uid?: SortOrder
    alumni_name?: SortOrder
    department?: SortOrder
    date?: SortOrder
    time?: SortOrder
    venue?: SortOrder
    title?: SortOrder
    email?: SortOrder
  }

  export type alumni_interaction_programAvgOrderByAggregateInput = {
    uid?: SortOrder
  }

  export type alumni_interaction_programMaxOrderByAggregateInput = {
    uid?: SortOrder
    alumni_name?: SortOrder
    department?: SortOrder
    date?: SortOrder
    time?: SortOrder
    venue?: SortOrder
    title?: SortOrder
    email?: SortOrder
  }

  export type alumni_interaction_programMinOrderByAggregateInput = {
    uid?: SortOrder
    alumni_name?: SortOrder
    department?: SortOrder
    date?: SortOrder
    time?: SortOrder
    venue?: SortOrder
    title?: SortOrder
    email?: SortOrder
  }

  export type alumni_interaction_programSumOrderByAggregateInput = {
    uid?: SortOrder
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type staff_detailsUidIdCompoundUniqueInput = {
    uid: number
    id: string
  }

  export type staff_detailsCountOrderByAggregateInput = {
    uid?: SortOrder
    name?: SortOrder
    department?: SortOrder
    id?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    image?: SortOrder
    domain?: SortOrder
    doj?: SortOrder
    college_name?: SortOrder
    description?: SortOrder
    experience?: SortOrder
  }

  export type staff_detailsAvgOrderByAggregateInput = {
    uid?: SortOrder
  }

  export type staff_detailsMaxOrderByAggregateInput = {
    uid?: SortOrder
    name?: SortOrder
    department?: SortOrder
    id?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    image?: SortOrder
    domain?: SortOrder
    doj?: SortOrder
    college_name?: SortOrder
    description?: SortOrder
    experience?: SortOrder
  }

  export type staff_detailsMinOrderByAggregateInput = {
    uid?: SortOrder
    name?: SortOrder
    department?: SortOrder
    id?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    image?: SortOrder
    domain?: SortOrder
    doj?: SortOrder
    college_name?: SortOrder
    description?: SortOrder
    experience?: SortOrder
  }

  export type staff_detailsSumOrderByAggregateInput = {
    uid?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type student_detailsUidRegnoCompoundUniqueInput = {
    uid: number
    regno: string
  }

  export type student_detailsCountOrderByAggregateInput = {
    uid?: SortOrder
    name?: SortOrder
    regno?: SortOrder
    department?: SortOrder
    pass_year?: SortOrder
    image?: SortOrder
    domain?: SortOrder
    college_name?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    city?: SortOrder
    aoi?: SortOrder
    alumni_interaction?: SortOrder
  }

  export type student_detailsAvgOrderByAggregateInput = {
    uid?: SortOrder
  }

  export type student_detailsMaxOrderByAggregateInput = {
    uid?: SortOrder
    name?: SortOrder
    regno?: SortOrder
    department?: SortOrder
    pass_year?: SortOrder
    image?: SortOrder
    domain?: SortOrder
    college_name?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    city?: SortOrder
    aoi?: SortOrder
    alumni_interaction?: SortOrder
  }

  export type student_detailsMinOrderByAggregateInput = {
    uid?: SortOrder
    name?: SortOrder
    regno?: SortOrder
    department?: SortOrder
    pass_year?: SortOrder
    image?: SortOrder
    domain?: SortOrder
    college_name?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    city?: SortOrder
    aoi?: SortOrder
    alumni_interaction?: SortOrder
  }

  export type student_detailsSumOrderByAggregateInput = {
    uid?: SortOrder
  }

  export type student_staff_interactionCountOrderByAggregateInput = {
    uid?: SortOrder
    name?: SortOrder
    regno?: SortOrder
    domain?: SortOrder
    department?: SortOrder
    pass_year?: SortOrder
    regarding?: SortOrder
    date?: SortOrder
    time?: SortOrder
    status?: SortOrder
  }

  export type student_staff_interactionAvgOrderByAggregateInput = {
    uid?: SortOrder
  }

  export type student_staff_interactionMaxOrderByAggregateInput = {
    uid?: SortOrder
    name?: SortOrder
    regno?: SortOrder
    domain?: SortOrder
    department?: SortOrder
    pass_year?: SortOrder
    regarding?: SortOrder
    date?: SortOrder
    time?: SortOrder
    status?: SortOrder
  }

  export type student_staff_interactionMinOrderByAggregateInput = {
    uid?: SortOrder
    name?: SortOrder
    regno?: SortOrder
    domain?: SortOrder
    department?: SortOrder
    pass_year?: SortOrder
    regarding?: SortOrder
    date?: SortOrder
    time?: SortOrder
    status?: SortOrder
  }

  export type student_staff_interactionSumOrderByAggregateInput = {
    uid?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use alumni_detailsDefaultArgs instead
     */
    export type alumni_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = alumni_detailsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use alumni_interaction_programDefaultArgs instead
     */
    export type alumni_interaction_programArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = alumni_interaction_programDefaultArgs<ExtArgs>
    /**
     * @deprecated Use staff_detailsDefaultArgs instead
     */
    export type staff_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = staff_detailsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use student_detailsDefaultArgs instead
     */
    export type student_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = student_detailsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use student_staff_interactionDefaultArgs instead
     */
    export type student_staff_interactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = student_staff_interactionDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}